<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Model;

class VcsCommitInfo
{
    /**
     * Gets or sets a value that represents the continuous integration build configuration name.
     *
     * @var string
     */
    protected $ciBuildConfigurationName;
    /**
     * Gets or sets a value that represents whether CI Build triggered by new commit or changeset.
     *
     * @var bool
     */
    protected $ciBuildHasChange;
    /**
     * Gets or sets a value that represents the continuous integration build Id.
     *
     * @var string
     */
    protected $ciBuildId;
    /**
     * Gets  a value that represents the continuous integration build server name.
     *
     * @var string
     */
    protected $ciBuildServerName;
    /**
     * Gets or sets a value that represents the continuous integration build server version.
     *
     * @var string
     */
    protected $ciBuildServerVersion;
    /**
     * Gets or sets a value that represents the continuous integration build url as a backlink.
     *
     * @var string
     */
    protected $ciBuildUrl;
    /**
     * Gets or sets a value that represents the continuous integration plugin name.
     *
     * @var string
     */
    protected $ciNcPluginVersion;
    /**
     * Gets or sets a value that represents the continuous integration build timestamp. This value is obtained from the.
    version control system by CI Server or generated by CI server.
     *
     * @var \DateTime
     */
    protected $ciTimestamp;
    /**
     * Gets or sets a value that represents the committer's Netsparker Cloud ID. It is obtained or mapped from the committer's.
    version control system name.
     *
     * @var string
     */
    protected $comitterId;
    /**
     * Gets or sets a value that represents the committer's version control system name. This value can be email adress, user.
    name or user's full name.
     *
     * @var string
     */
    protected $committer;
    /**
     * Gets or sets a value that represents the committer's Netsparker Cloud name. This value represents display name of.
    Netsparker Cloud user. It is obtained or mapped from the committer's version control system name.
     *
     * @var string
     */
    protected $committerName;
    /**
     * Gets or sets a value that represents overridden comitter name according to relevant user mapping. If not found a.
    mapping then it is empty.
     *
     * @var string
     */
    protected $committerOverride;
    /**
     * Gets or sets a value that represents integration system.
     *
     * @var string
     */
    protected $integrationSystem;
    /**
     * Gets or sets a value that represents whether the committer is exist and authorized to see NC Issues.
     *
     * @var bool
     */
    protected $isCommiterExistAndAuthorizedInNc;
    /**
     * Gets or sets a value that represents the version control system name such as git.
     *
     * @var string
     */
    protected $vcsName;
    /**
     * Gets or sets a value that represents the version control system commit id also known as changeset id.
     *
     * @var string
     */
    protected $vcsVersion;

    /**
     * Gets or sets a value that represents the continuous integration build configuration name.
     *
     * @return string
     */
    public function getCiBuildConfigurationName(): ?string
    {
        return $this->ciBuildConfigurationName;
    }

    /**
     * Gets or sets a value that represents the continuous integration build configuration name.
     *
     * @param string $ciBuildConfigurationName
     *
     * @return self
     */
    public function setCiBuildConfigurationName(?string $ciBuildConfigurationName): self
    {
        $this->ciBuildConfigurationName = $ciBuildConfigurationName;

        return $this;
    }

    /**
     * Gets or sets a value that represents whether CI Build triggered by new commit or changeset.
     *
     * @return bool
     */
    public function getCiBuildHasChange(): ?bool
    {
        return $this->ciBuildHasChange;
    }

    /**
     * Gets or sets a value that represents whether CI Build triggered by new commit or changeset.
     *
     * @param bool $ciBuildHasChange
     *
     * @return self
     */
    public function setCiBuildHasChange(?bool $ciBuildHasChange): self
    {
        $this->ciBuildHasChange = $ciBuildHasChange;

        return $this;
    }

    /**
     * Gets or sets a value that represents the continuous integration build Id.
     *
     * @return string
     */
    public function getCiBuildId(): ?string
    {
        return $this->ciBuildId;
    }

    /**
     * Gets or sets a value that represents the continuous integration build Id.
     *
     * @param string $ciBuildId
     *
     * @return self
     */
    public function setCiBuildId(?string $ciBuildId): self
    {
        $this->ciBuildId = $ciBuildId;

        return $this;
    }

    /**
     * Gets  a value that represents the continuous integration build server name.
     *
     * @return string
     */
    public function getCiBuildServerName(): ?string
    {
        return $this->ciBuildServerName;
    }

    /**
     * Gets  a value that represents the continuous integration build server name.
     *
     * @param string $ciBuildServerName
     *
     * @return self
     */
    public function setCiBuildServerName(?string $ciBuildServerName): self
    {
        $this->ciBuildServerName = $ciBuildServerName;

        return $this;
    }

    /**
     * Gets or sets a value that represents the continuous integration build server version.
     *
     * @return string
     */
    public function getCiBuildServerVersion(): ?string
    {
        return $this->ciBuildServerVersion;
    }

    /**
     * Gets or sets a value that represents the continuous integration build server version.
     *
     * @param string $ciBuildServerVersion
     *
     * @return self
     */
    public function setCiBuildServerVersion(?string $ciBuildServerVersion): self
    {
        $this->ciBuildServerVersion = $ciBuildServerVersion;

        return $this;
    }

    /**
     * Gets or sets a value that represents the continuous integration build url as a backlink.
     *
     * @return string
     */
    public function getCiBuildUrl(): ?string
    {
        return $this->ciBuildUrl;
    }

    /**
     * Gets or sets a value that represents the continuous integration build url as a backlink.
     *
     * @param string $ciBuildUrl
     *
     * @return self
     */
    public function setCiBuildUrl(?string $ciBuildUrl): self
    {
        $this->ciBuildUrl = $ciBuildUrl;

        return $this;
    }

    /**
     * Gets or sets a value that represents the continuous integration plugin name.
     *
     * @return string
     */
    public function getCiNcPluginVersion(): ?string
    {
        return $this->ciNcPluginVersion;
    }

    /**
     * Gets or sets a value that represents the continuous integration plugin name.
     *
     * @param string $ciNcPluginVersion
     *
     * @return self
     */
    public function setCiNcPluginVersion(?string $ciNcPluginVersion): self
    {
        $this->ciNcPluginVersion = $ciNcPluginVersion;

        return $this;
    }

    /**
     * Gets or sets a value that represents the continuous integration build timestamp. This value is obtained from the.
    version control system by CI Server or generated by CI server.
     *
     * @return \DateTime
     */
    public function getCiTimestamp(): ?\DateTime
    {
        return $this->ciTimestamp;
    }

    /**
     * Gets or sets a value that represents the continuous integration build timestamp. This value is obtained from the.
    version control system by CI Server or generated by CI server.
     *
     * @param \DateTime $ciTimestamp
     *
     * @return self
     */
    public function setCiTimestamp(?\DateTime $ciTimestamp): self
    {
        $this->ciTimestamp = $ciTimestamp;

        return $this;
    }

    /**
     * Gets or sets a value that represents the committer's Netsparker Cloud ID. It is obtained or mapped from the committer's.
    version control system name.
     *
     * @return string
     */
    public function getComitterId(): ?string
    {
        return $this->comitterId;
    }

    /**
     * Gets or sets a value that represents the committer's Netsparker Cloud ID. It is obtained or mapped from the committer's.
    version control system name.
     *
     * @param string $comitterId
     *
     * @return self
     */
    public function setComitterId(?string $comitterId): self
    {
        $this->comitterId = $comitterId;

        return $this;
    }

    /**
     * Gets or sets a value that represents the committer's version control system name. This value can be email adress, user.
    name or user's full name.
     *
     * @return string
     */
    public function getCommitter(): ?string
    {
        return $this->committer;
    }

    /**
     * Gets or sets a value that represents the committer's version control system name. This value can be email adress, user.
    name or user's full name.
     *
     * @param string $committer
     *
     * @return self
     */
    public function setCommitter(?string $committer): self
    {
        $this->committer = $committer;

        return $this;
    }

    /**
     * Gets or sets a value that represents the committer's Netsparker Cloud name. This value represents display name of.
    Netsparker Cloud user. It is obtained or mapped from the committer's version control system name.
     *
     * @return string
     */
    public function getCommitterName(): ?string
    {
        return $this->committerName;
    }

    /**
     * Gets or sets a value that represents the committer's Netsparker Cloud name. This value represents display name of.
    Netsparker Cloud user. It is obtained or mapped from the committer's version control system name.
     *
     * @param string $committerName
     *
     * @return self
     */
    public function setCommitterName(?string $committerName): self
    {
        $this->committerName = $committerName;

        return $this;
    }

    /**
     * Gets or sets a value that represents overridden comitter name according to relevant user mapping. If not found a.
    mapping then it is empty.
     *
     * @return string
     */
    public function getCommitterOverride(): ?string
    {
        return $this->committerOverride;
    }

    /**
     * Gets or sets a value that represents overridden comitter name according to relevant user mapping. If not found a.
    mapping then it is empty.
     *
     * @param string $committerOverride
     *
     * @return self
     */
    public function setCommitterOverride(?string $committerOverride): self
    {
        $this->committerOverride = $committerOverride;

        return $this;
    }

    /**
     * Gets or sets a value that represents integration system.
     *
     * @return string
     */
    public function getIntegrationSystem(): ?string
    {
        return $this->integrationSystem;
    }

    /**
     * Gets or sets a value that represents integration system.
     *
     * @param string $integrationSystem
     *
     * @return self
     */
    public function setIntegrationSystem(?string $integrationSystem): self
    {
        $this->integrationSystem = $integrationSystem;

        return $this;
    }

    /**
     * Gets or sets a value that represents whether the committer is exist and authorized to see NC Issues.
     *
     * @return bool
     */
    public function getIsCommiterExistAndAuthorizedInNc(): ?bool
    {
        return $this->isCommiterExistAndAuthorizedInNc;
    }

    /**
     * Gets or sets a value that represents whether the committer is exist and authorized to see NC Issues.
     *
     * @param bool $isCommiterExistAndAuthorizedInNc
     *
     * @return self
     */
    public function setIsCommiterExistAndAuthorizedInNc(?bool $isCommiterExistAndAuthorizedInNc): self
    {
        $this->isCommiterExistAndAuthorizedInNc = $isCommiterExistAndAuthorizedInNc;

        return $this;
    }

    /**
     * Gets or sets a value that represents the version control system name such as git.
     *
     * @return string
     */
    public function getVcsName(): ?string
    {
        return $this->vcsName;
    }

    /**
     * Gets or sets a value that represents the version control system name such as git.
     *
     * @param string $vcsName
     *
     * @return self
     */
    public function setVcsName(?string $vcsName): self
    {
        $this->vcsName = $vcsName;

        return $this;
    }

    /**
     * Gets or sets a value that represents the version control system commit id also known as changeset id.
     *
     * @return string
     */
    public function getVcsVersion(): ?string
    {
        return $this->vcsVersion;
    }

    /**
     * Gets or sets a value that represents the version control system commit id also known as changeset id.
     *
     * @param string $vcsVersion
     *
     * @return self
     */
    public function setVcsVersion(?string $vcsVersion): self
    {
        $this->vcsVersion = $vcsVersion;

        return $this;
    }
}
