<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Model;

class FormAuthenticationSettingModel
{
    /**
     * Gets or sets the custom scripts.
     *
     * @var FormAuthenticationCustomScript[]
     */
    protected $customScripts;
    /**
     * Gets or sets the personas validation property.
     *
     * @var bool
     */
    protected $defaultPersonaValidation;
    /**
     * Gets or sets a value indicating whether to detect Bearer token authorization. Default: true.
     *
     * @var bool
     */
    protected $detectBearerToken;
    /**
     * Gets or sets whether logout detection is disabled.
     *
     * @var bool
     */
    protected $disableLogoutDetection;
    /**
     * Gets or sets a value indicating whether form authentication is enabled.
     *
     * @var bool
     */
    protected $isEnabled;
    /**
     * Gets or sets the login form URL.
     *
     * @var string
     */
    protected $loginFormUrl;
    /**
     * Gets or sets the login required URL.
     *
     * @var string
     */
    protected $loginRequiredUrl;
    /**
     * Gets or sets the logout keyword patterns.
     *
     * @var LogoutKeywordPatternModel[]
     */
    protected $logoutKeywordPatterns;
    /**
     * Gets or sets the JSON serialized logout keyword patterns.
     *
     * @var string
     */
    protected $logoutKeywordPatternsValue;
    /**
     * Gets or sets the logout redirect pattern.
     *
     * @var string
     */
    protected $logoutRedirectPattern;
    /**
     * Gets or sets a value indicating whether target URL should be overrided with authenticated page.
     *
     * @var bool
     */
    protected $overrideTargetUrl;
    /**
     * Gets or sets the form authentication personas.
     *
     * @var FormAuthenticationPersona[]
     */
    protected $personas;
    /**
     * Gets or sets the personas validation property.
     *
     * @var bool
     */
    protected $personasValidation;

    /**
     * Gets or sets the custom scripts.
     *
     * @return FormAuthenticationCustomScript[]
     */
    public function getCustomScripts(): ?array
    {
        return $this->customScripts;
    }

    /**
     * Gets or sets the custom scripts.
     *
     * @param FormAuthenticationCustomScript[] $customScripts
     *
     * @return self
     */
    public function setCustomScripts(?array $customScripts): self
    {
        $this->customScripts = $customScripts;

        return $this;
    }

    /**
     * Gets or sets the personas validation property.
     *
     * @return bool
     */
    public function getDefaultPersonaValidation(): ?bool
    {
        return $this->defaultPersonaValidation;
    }

    /**
     * Gets or sets the personas validation property.
     *
     * @param bool $defaultPersonaValidation
     *
     * @return self
     */
    public function setDefaultPersonaValidation(?bool $defaultPersonaValidation): self
    {
        $this->defaultPersonaValidation = $defaultPersonaValidation;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether to detect Bearer token authorization. Default: true.
     *
     * @return bool
     */
    public function getDetectBearerToken(): ?bool
    {
        return $this->detectBearerToken;
    }

    /**
     * Gets or sets a value indicating whether to detect Bearer token authorization. Default: true.
     *
     * @param bool $detectBearerToken
     *
     * @return self
     */
    public function setDetectBearerToken(?bool $detectBearerToken): self
    {
        $this->detectBearerToken = $detectBearerToken;

        return $this;
    }

    /**
     * Gets or sets whether logout detection is disabled.
     *
     * @return bool
     */
    public function getDisableLogoutDetection(): ?bool
    {
        return $this->disableLogoutDetection;
    }

    /**
     * Gets or sets whether logout detection is disabled.
     *
     * @param bool $disableLogoutDetection
     *
     * @return self
     */
    public function setDisableLogoutDetection(?bool $disableLogoutDetection): self
    {
        $this->disableLogoutDetection = $disableLogoutDetection;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether form authentication is enabled.
     *
     * @return bool
     */
    public function getIsEnabled(): ?bool
    {
        return $this->isEnabled;
    }

    /**
     * Gets or sets a value indicating whether form authentication is enabled.
     *
     * @param bool $isEnabled
     *
     * @return self
     */
    public function setIsEnabled(?bool $isEnabled): self
    {
        $this->isEnabled = $isEnabled;

        return $this;
    }

    /**
     * Gets or sets the login form URL.
     *
     * @return string
     */
    public function getLoginFormUrl(): ?string
    {
        return $this->loginFormUrl;
    }

    /**
     * Gets or sets the login form URL.
     *
     * @param string $loginFormUrl
     *
     * @return self
     */
    public function setLoginFormUrl(?string $loginFormUrl): self
    {
        $this->loginFormUrl = $loginFormUrl;

        return $this;
    }

    /**
     * Gets or sets the login required URL.
     *
     * @return string
     */
    public function getLoginRequiredUrl(): ?string
    {
        return $this->loginRequiredUrl;
    }

    /**
     * Gets or sets the login required URL.
     *
     * @param string $loginRequiredUrl
     *
     * @return self
     */
    public function setLoginRequiredUrl(?string $loginRequiredUrl): self
    {
        $this->loginRequiredUrl = $loginRequiredUrl;

        return $this;
    }

    /**
     * Gets or sets the logout keyword patterns.
     *
     * @return LogoutKeywordPatternModel[]
     */
    public function getLogoutKeywordPatterns(): ?array
    {
        return $this->logoutKeywordPatterns;
    }

    /**
     * Gets or sets the logout keyword patterns.
     *
     * @param LogoutKeywordPatternModel[] $logoutKeywordPatterns
     *
     * @return self
     */
    public function setLogoutKeywordPatterns(?array $logoutKeywordPatterns): self
    {
        $this->logoutKeywordPatterns = $logoutKeywordPatterns;

        return $this;
    }

    /**
     * Gets or sets the JSON serialized logout keyword patterns.
     *
     * @return string
     */
    public function getLogoutKeywordPatternsValue(): ?string
    {
        return $this->logoutKeywordPatternsValue;
    }

    /**
     * Gets or sets the JSON serialized logout keyword patterns.
     *
     * @param string $logoutKeywordPatternsValue
     *
     * @return self
     */
    public function setLogoutKeywordPatternsValue(?string $logoutKeywordPatternsValue): self
    {
        $this->logoutKeywordPatternsValue = $logoutKeywordPatternsValue;

        return $this;
    }

    /**
     * Gets or sets the logout redirect pattern.
     *
     * @return string
     */
    public function getLogoutRedirectPattern(): ?string
    {
        return $this->logoutRedirectPattern;
    }

    /**
     * Gets or sets the logout redirect pattern.
     *
     * @param string $logoutRedirectPattern
     *
     * @return self
     */
    public function setLogoutRedirectPattern(?string $logoutRedirectPattern): self
    {
        $this->logoutRedirectPattern = $logoutRedirectPattern;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether target URL should be overrided with authenticated page.
     *
     * @return bool
     */
    public function getOverrideTargetUrl(): ?bool
    {
        return $this->overrideTargetUrl;
    }

    /**
     * Gets or sets a value indicating whether target URL should be overrided with authenticated page.
     *
     * @param bool $overrideTargetUrl
     *
     * @return self
     */
    public function setOverrideTargetUrl(?bool $overrideTargetUrl): self
    {
        $this->overrideTargetUrl = $overrideTargetUrl;

        return $this;
    }

    /**
     * Gets or sets the form authentication personas.
     *
     * @return FormAuthenticationPersona[]
     */
    public function getPersonas(): ?array
    {
        return $this->personas;
    }

    /**
     * Gets or sets the form authentication personas.
     *
     * @param FormAuthenticationPersona[] $personas
     *
     * @return self
     */
    public function setPersonas(?array $personas): self
    {
        $this->personas = $personas;

        return $this;
    }

    /**
     * Gets or sets the personas validation property.
     *
     * @return bool
     */
    public function getPersonasValidation(): ?bool
    {
        return $this->personasValidation;
    }

    /**
     * Gets or sets the personas validation property.
     *
     * @param bool $personasValidation
     *
     * @return self
     */
    public function setPersonasValidation(?bool $personasValidation): self
    {
        $this->personasValidation = $personasValidation;

        return $this;
    }
}
