<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Model;

class Custom404SettingModel
{
    /**
     * Gets or sets the Custom 404 RegEx.
     *
     * @var string
     */
    protected $custom404RegEx;
    /**
     * Gets or sets a value indicating whether Auto 404 detection is disabled.
     *
     * @var bool
     */
    protected $disableAuto404Detection;
    /**
     * Gets or sets the maximum 404 pages to test.
     *
     * @var int
     */
    protected $max404PagesToTest;
    /**
     * Gets or sets the maximum 404 signature.
     *
     * @var int
     */
    protected $maximum404Signature;

    /**
     * Gets or sets the Custom 404 RegEx.
     *
     * @return string
     */
    public function getCustom404RegEx(): ?string
    {
        return $this->custom404RegEx;
    }

    /**
     * Gets or sets the Custom 404 RegEx.
     *
     * @param string $custom404RegEx
     *
     * @return self
     */
    public function setCustom404RegEx(?string $custom404RegEx): self
    {
        $this->custom404RegEx = $custom404RegEx;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether Auto 404 detection is disabled.
     *
     * @return bool
     */
    public function getDisableAuto404Detection(): ?bool
    {
        return $this->disableAuto404Detection;
    }

    /**
     * Gets or sets a value indicating whether Auto 404 detection is disabled.
     *
     * @param bool $disableAuto404Detection
     *
     * @return self
     */
    public function setDisableAuto404Detection(?bool $disableAuto404Detection): self
    {
        $this->disableAuto404Detection = $disableAuto404Detection;

        return $this;
    }

    /**
     * Gets or sets the maximum 404 pages to test.
     *
     * @return int
     */
    public function getMax404PagesToTest(): ?int
    {
        return $this->max404PagesToTest;
    }

    /**
     * Gets or sets the maximum 404 pages to test.
     *
     * @param int $max404PagesToTest
     *
     * @return self
     */
    public function setMax404PagesToTest(?int $max404PagesToTest): self
    {
        $this->max404PagesToTest = $max404PagesToTest;

        return $this;
    }

    /**
     * Gets or sets the maximum 404 signature.
     *
     * @return int
     */
    public function getMaximum404Signature(): ?int
    {
        return $this->maximum404Signature;
    }

    /**
     * Gets or sets the maximum 404 signature.
     *
     * @param int $maximum404Signature
     *
     * @return self
     */
    public function setMaximum404Signature(?int $maximum404Signature): self
    {
        $this->maximum404Signature = $maximum404Signature;

        return $this;
    }
}
