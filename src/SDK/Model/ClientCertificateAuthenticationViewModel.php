<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Model;

class ClientCertificateAuthenticationViewModel
{
    /**
     * An utility class that helps to caching files with {Netsparker.Cloud.Infrastructure.Attributes.UploadedFileAttribute}.
     *
     * @var FileCache
     */
    protected $file;
    /**
     * Gets or sets a value indicating whether client certificate authentication is enabled.
     *
     * @var bool
     */
    protected $isEnabled;
    /**
     * Gets or sets the password for client certificate authentication.
     *
     * @var string
     */
    protected $password;

    /**
     * An utility class that helps to caching files with {Netsparker.Cloud.Infrastructure.Attributes.UploadedFileAttribute}.
     *
     * @return FileCache
     */
    public function getFile(): ?FileCache
    {
        return $this->file;
    }

    /**
     * An utility class that helps to caching files with {Netsparker.Cloud.Infrastructure.Attributes.UploadedFileAttribute}.
     *
     * @param FileCache $file
     *
     * @return self
     */
    public function setFile(?FileCache $file): self
    {
        $this->file = $file;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether client certificate authentication is enabled.
     *
     * @return bool
     */
    public function getIsEnabled(): ?bool
    {
        return $this->isEnabled;
    }

    /**
     * Gets or sets a value indicating whether client certificate authentication is enabled.
     *
     * @param bool $isEnabled
     *
     * @return self
     */
    public function setIsEnabled(?bool $isEnabled): self
    {
        $this->isEnabled = $isEnabled;

        return $this;
    }

    /**
     * Gets or sets the password for client certificate authentication.
     *
     * @return string
     */
    public function getPassword(): ?string
    {
        return $this->password;
    }

    /**
     * Gets or sets the password for client certificate authentication.
     *
     * @param string $password
     *
     * @return self
     */
    public function setPassword(?string $password): self
    {
        $this->password = $password;

        return $this;
    }
}
