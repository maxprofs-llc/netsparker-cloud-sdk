<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Model;

class ScanTaskModel
{
    /**
     * Gets or sets the additional websites to scan.
     *
     * @var AdditionalWebsiteModel[]
     */
    protected $additionalWebsites;
    /**
     * Gets or sets the agent id.
     *
     * @var string
     */
    protected $agentId;
    /**
     * Gets or sets the agent name.
     *
     * @var string
     */
    protected $agentName;
    /**
     * Gets or sets the cookies.
     *
     * @var string
     */
    protected $cookies;
    /**
     * Gets or sets a value indicating whether parallel attacker is enabled.
     *
     * @var bool
     */
    protected $crawlAndAttack;
    /**
     * Gets or sets a value indicating whether Heuristic URL Rewrite support is enabled together with custom URL Rewrite.
    support.
     *
     * @var bool
     */
    protected $enableHeuristicChecksInCustomUrlRewrite;
    /**
     * Gets or sets the excluded links.
     *
     * @var string
     */
    protected $excludedLinks;
    /**
     * Gets or sets a value indicating whether links should be excluded/included.
     *
     * @var bool
     */
    protected $excludeLinks;
    /**
     * Gets or sets the disallowed HTTP methods.
     *
     * @var string
     */
    protected $disallowedHttpMethods;
    /**
     * Gets or sets a value indicating whether automatic crawling is enabled.
     *
     * @var bool
     */
    protected $findAndFollowNewLinks;
    /**
     * Gets or sets the imported links.
     *
     * @var string
     */
    protected $importedLinks;
    /**
     * Gets the desktop scan identifier.
     *
     * @var string
     */
    protected $desktopScanId;
    /**
     * Gets or sets initiated date in user's preferred format.
     *
     * @var string
     */
    protected $initiated;
    /**
     * Gets or sets the initiated date in user's preferred format.
     *
     * @var string
     */
    protected $initiatedDate;
    /**
     * Gets or sets the initiated date.
     *
     * @var \DateTime
     */
    protected $initiatedAt;
    /**
     * Gets or sets the root path maximum dynamic signatures for heuristic URL Rewrite detection.
     *
     * @var int
     */
    protected $maxDynamicSignatures;
    /**
     * Gets or sets the maximum duration of the scan in hours.
     *
     * @var int
     */
    protected $maxScanDuration;
    /**
     * Gets or sets the description of the policy.
     *
     * @var string
     */
    protected $policyDescription;
    /**
     * Gets or sets the foreign key reference to the related {N:Netsparker.Cloud.Infrastructure.Models.Policy} instance.
     *
     * @var string
     */
    protected $policyId;
    /**
     * Gets or sets the name of the policy.
     *
     * @var string
     */
    protected $policyName;
    /**
     * Gets or sets the description of the report policy.
     *
     * @var string
     */
    protected $reportPolicyDescription;
    /**
     * Gets or sets the foreign key reference to the related {Netsparker.Cloud.Core.Models.ReportPolicySetting} instance.
     *
     * @var string
     */
    protected $reportPolicyId;
    /**
     * Gets or sets the name of the report policy.
     *
     * @var string
     */
    protected $reportPolicyName;
    /**
     * Gets or sets the scan scope.
     *
     * @var string
     */
    protected $scope;
    /**
     * Gets or sets the sub path maximum dynamic signatures for heuristic URL Rewrite detection.
     *
     * @var int
     */
    protected $subPathMaxDynamicSignatures;
    /**
     * Gets or sets target path.
     *
     * @var string
     */
    protected $targetPath;
    /**
     * Gets or sets TargetUrl.
     *
     * @var string
     */
    protected $targetUrl;
    /**
     * Gets or sets the target URL root.
     *
     * @var string
     */
    protected $targetUrlRoot;
    /**
     * Represents a model for carrying out scan time window settings.
     *
     * @var ScanTimeWindowModel
     */
    protected $timeWindow;
    /**
     * Gets or sets the total vulnerability count without information vulnerabilities.
     *
     * @var int
     */
    protected $totalVulnerabilityCount;
    /**
     * Gets or sets the extensions that will be analyzed for heuristic URL Rewrite detection.
     *
     * @var string
     */
    protected $urlRewriteAnalyzableExtensions;
    /**
     * Gets or sets the block separators for heuristic URL Rewrite detection.
     *
     * @var string
     */
    protected $urlRewriteBlockSeparators;
    /**
     * Gets or sets the URL Rewrite mode.
     *
     * @var string
     */
    protected $urlRewriteMode;
    /**
     * Gets or sets the URL Rewrite rules.
     *
     * @var UrlRewriteRuleModel[]
     */
    protected $urlRewriteRules;
    /**
     * Gets or sets the user identifier.
     *
     * @var string
     */
    protected $userId;
    /**
     * Represents optional commit info comes from Netsparker continuous integration plugins.
     *
     * @var VcsCommitInfo
     */
    protected $vcsCommitInfo;
    /**
     * Gets or sets the name of the website.
     *
     * @var string
     */
    protected $websiteName;
    /**
     * Gets or sets the website URL.
     *
     * @var string
     */
    protected $websiteUrl;
    /**
     * Gets or sets the number of steps (HTTP requests) completed thus far.
     *
     * @var int
     */
    protected $completedSteps;
    /**
     * Gets or sets the estimated launch time in minutes for queued scans.
     *
     * @var int
     */
    protected $estimatedLaunchTime;
    /**
     * Gets or sets the estimated total number of steps (HTTP requests) that this scan will undertake.
     *
     * @var int
     */
    protected $estimatedSteps;
    /**
     * Gets or sets FailureReason.
     *
     * @var string
     */
    protected $failureReason;
    /**
     * Gets the failure reason description.
     *
     * @var string
     */
    protected $failureReasonDescription;
    /**
     * Gets the failure reason string.
     *
     * @var string
     */
    protected $failureReasonString;
    /**
     * Gets or sets the global threat level.
     *
     * @var string
     */
    protected $globalThreatLevel;
    /**
     * Gets the global vulnerability critical count.
     *
     * @var int
     */
    protected $globalVulnerabilityCriticalCount;
    /**
     * Gets the global vulnerability high count.
     *
     * @var int
     */
    protected $globalVulnerabilityHighCount;
    /**
     * Gets the global vulnerability information count.
     *
     * @var int
     */
    protected $globalVulnerabilityInfoCount;
    /**
     * Gets the global vulnerability low count.
     *
     * @var int
     */
    protected $globalVulnerabilityLowCount;
    /**
     * Gets the global vulnerability medium count.
     *
     * @var int
     */
    protected $globalVulnerabilityMediumCount;
    /**
     * Gets or sets Id.
     *
     * @var string
     */
    protected $id;
    /**
     * Gets a value indicating whether scan is completed  with any state.
     *
     * @var bool
     */
    protected $isCompleted;
    /**
     * Gets the completed percentage.
     *
     * @var int
     */
    protected $percentage;
    /**
     * Gets or sets the Phase.
     *
     * @var string
     */
    protected $phase;
    /**
     * Gets or sets the scan group identifier.
     *
     * @var string
     */
    protected $scanTaskGroupId;
    /**
     * Gets or sets the type of the scan.
     *
     * @var string
     */
    protected $scanType;
    /**
     * Gets or sets the scheduled scan identifier.
     *
     * @var string
     */
    protected $scheduledScanId;
    /**
     * Gets or sets State.
     *
     * @var string
     */
    protected $state;
    /**
     * Gets or sets the date and time at which this task state was last changed.
     *
     * @var \DateTime
     */
    protected $stateChanged;
    /**
     * Gets or sets the threat level.
     *
     * @var string
     */
    protected $threatLevel;
    /**
     * Gets or sets the count of vulnerabilities with critical level severity.
     *
     * @var int
     */
    protected $vulnerabilityCriticalCount;
    /**
     * Gets or sets the count of vulnerabilities with high level severity.
     *
     * @var int
     */
    protected $vulnerabilityHighCount;
    /**
     * Gets or sets the count of vulnerabilities with information level severity.
     *
     * @var int
     */
    protected $vulnerabilityInfoCount;
    /**
     * Gets or sets the count of vulnerabilities with low level severity.
     *
     * @var int
     */
    protected $vulnerabilityLowCount;
    /**
     * Gets or sets the count of vulnerabilities with medium level severity.
     *
     * @var int
     */
    protected $vulnerabilityMediumCount;
    /**
     * Gets the website identifier.
     *
     * @var string
     */
    protected $websiteId;

    /**
     * Gets or sets the additional websites to scan.
     *
     * @return AdditionalWebsiteModel[]
     */
    public function getAdditionalWebsites(): ?array
    {
        return $this->additionalWebsites;
    }

    /**
     * Gets or sets the additional websites to scan.
     *
     * @param AdditionalWebsiteModel[] $additionalWebsites
     *
     * @return self
     */
    public function setAdditionalWebsites(?array $additionalWebsites): self
    {
        $this->additionalWebsites = $additionalWebsites;

        return $this;
    }

    /**
     * Gets or sets the agent id.
     *
     * @return string
     */
    public function getAgentId(): ?string
    {
        return $this->agentId;
    }

    /**
     * Gets or sets the agent id.
     *
     * @param string $agentId
     *
     * @return self
     */
    public function setAgentId(?string $agentId): self
    {
        $this->agentId = $agentId;

        return $this;
    }

    /**
     * Gets or sets the agent name.
     *
     * @return string
     */
    public function getAgentName(): ?string
    {
        return $this->agentName;
    }

    /**
     * Gets or sets the agent name.
     *
     * @param string $agentName
     *
     * @return self
     */
    public function setAgentName(?string $agentName): self
    {
        $this->agentName = $agentName;

        return $this;
    }

    /**
     * Gets or sets the cookies.
     *
     * @return string
     */
    public function getCookies(): ?string
    {
        return $this->cookies;
    }

    /**
     * Gets or sets the cookies.
     *
     * @param string $cookies
     *
     * @return self
     */
    public function setCookies(?string $cookies): self
    {
        $this->cookies = $cookies;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether parallel attacker is enabled.
     *
     * @return bool
     */
    public function getCrawlAndAttack(): ?bool
    {
        return $this->crawlAndAttack;
    }

    /**
     * Gets or sets a value indicating whether parallel attacker is enabled.
     *
     * @param bool $crawlAndAttack
     *
     * @return self
     */
    public function setCrawlAndAttack(?bool $crawlAndAttack): self
    {
        $this->crawlAndAttack = $crawlAndAttack;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether Heuristic URL Rewrite support is enabled together with custom URL Rewrite.
    support.
     *
     * @return bool
     */
    public function getEnableHeuristicChecksInCustomUrlRewrite(): ?bool
    {
        return $this->enableHeuristicChecksInCustomUrlRewrite;
    }

    /**
     * Gets or sets a value indicating whether Heuristic URL Rewrite support is enabled together with custom URL Rewrite.
    support.
     *
     * @param bool $enableHeuristicChecksInCustomUrlRewrite
     *
     * @return self
     */
    public function setEnableHeuristicChecksInCustomUrlRewrite(?bool $enableHeuristicChecksInCustomUrlRewrite): self
    {
        $this->enableHeuristicChecksInCustomUrlRewrite = $enableHeuristicChecksInCustomUrlRewrite;

        return $this;
    }

    /**
     * Gets or sets the excluded links.
     *
     * @return string
     */
    public function getExcludedLinks(): ?string
    {
        return $this->excludedLinks;
    }

    /**
     * Gets or sets the excluded links.
     *
     * @param string $excludedLinks
     *
     * @return self
     */
    public function setExcludedLinks(?string $excludedLinks): self
    {
        $this->excludedLinks = $excludedLinks;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether links should be excluded/included.
     *
     * @return bool
     */
    public function getExcludeLinks(): ?bool
    {
        return $this->excludeLinks;
    }

    /**
     * Gets or sets a value indicating whether links should be excluded/included.
     *
     * @param bool $excludeLinks
     *
     * @return self
     */
    public function setExcludeLinks(?bool $excludeLinks): self
    {
        $this->excludeLinks = $excludeLinks;

        return $this;
    }

    /**
     * Gets or sets the disallowed HTTP methods.
     *
     * @return string
     */
    public function getDisallowedHttpMethods(): ?string
    {
        return $this->disallowedHttpMethods;
    }

    /**
     * Gets or sets the disallowed HTTP methods.
     *
     * @param string $disallowedHttpMethods
     *
     * @return self
     */
    public function setDisallowedHttpMethods(?string $disallowedHttpMethods): self
    {
        $this->disallowedHttpMethods = $disallowedHttpMethods;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether automatic crawling is enabled.
     *
     * @return bool
     */
    public function getFindAndFollowNewLinks(): ?bool
    {
        return $this->findAndFollowNewLinks;
    }

    /**
     * Gets or sets a value indicating whether automatic crawling is enabled.
     *
     * @param bool $findAndFollowNewLinks
     *
     * @return self
     */
    public function setFindAndFollowNewLinks(?bool $findAndFollowNewLinks): self
    {
        $this->findAndFollowNewLinks = $findAndFollowNewLinks;

        return $this;
    }

    /**
     * Gets or sets the imported links.
     *
     * @return string
     */
    public function getImportedLinks(): ?string
    {
        return $this->importedLinks;
    }

    /**
     * Gets or sets the imported links.
     *
     * @param string $importedLinks
     *
     * @return self
     */
    public function setImportedLinks(?string $importedLinks): self
    {
        $this->importedLinks = $importedLinks;

        return $this;
    }

    /**
     * Gets the desktop scan identifier.
     *
     * @return string
     */
    public function getDesktopScanId(): ?string
    {
        return $this->desktopScanId;
    }

    /**
     * Gets the desktop scan identifier.
     *
     * @param string $desktopScanId
     *
     * @return self
     */
    public function setDesktopScanId(?string $desktopScanId): self
    {
        $this->desktopScanId = $desktopScanId;

        return $this;
    }

    /**
     * Gets or sets initiated date in user's preferred format.
     *
     * @return string
     */
    public function getInitiated(): ?string
    {
        return $this->initiated;
    }

    /**
     * Gets or sets initiated date in user's preferred format.
     *
     * @param string $initiated
     *
     * @return self
     */
    public function setInitiated(?string $initiated): self
    {
        $this->initiated = $initiated;

        return $this;
    }

    /**
     * Gets or sets the initiated date in user's preferred format.
     *
     * @return string
     */
    public function getInitiatedDate(): ?string
    {
        return $this->initiatedDate;
    }

    /**
     * Gets or sets the initiated date in user's preferred format.
     *
     * @param string $initiatedDate
     *
     * @return self
     */
    public function setInitiatedDate(?string $initiatedDate): self
    {
        $this->initiatedDate = $initiatedDate;

        return $this;
    }

    /**
     * Gets or sets the initiated date.
     *
     * @return \DateTime
     */
    public function getInitiatedAt(): ?\DateTime
    {
        return $this->initiatedAt;
    }

    /**
     * Gets or sets the initiated date.
     *
     * @param \DateTime $initiatedAt
     *
     * @return self
     */
    public function setInitiatedAt(?\DateTime $initiatedAt): self
    {
        $this->initiatedAt = $initiatedAt;

        return $this;
    }

    /**
     * Gets or sets the root path maximum dynamic signatures for heuristic URL Rewrite detection.
     *
     * @return int
     */
    public function getMaxDynamicSignatures(): ?int
    {
        return $this->maxDynamicSignatures;
    }

    /**
     * Gets or sets the root path maximum dynamic signatures for heuristic URL Rewrite detection.
     *
     * @param int $maxDynamicSignatures
     *
     * @return self
     */
    public function setMaxDynamicSignatures(?int $maxDynamicSignatures): self
    {
        $this->maxDynamicSignatures = $maxDynamicSignatures;

        return $this;
    }

    /**
     * Gets or sets the maximum duration of the scan in hours.
     *
     * @return int
     */
    public function getMaxScanDuration(): ?int
    {
        return $this->maxScanDuration;
    }

    /**
     * Gets or sets the maximum duration of the scan in hours.
     *
     * @param int $maxScanDuration
     *
     * @return self
     */
    public function setMaxScanDuration(?int $maxScanDuration): self
    {
        $this->maxScanDuration = $maxScanDuration;

        return $this;
    }

    /**
     * Gets or sets the description of the policy.
     *
     * @return string
     */
    public function getPolicyDescription(): ?string
    {
        return $this->policyDescription;
    }

    /**
     * Gets or sets the description of the policy.
     *
     * @param string $policyDescription
     *
     * @return self
     */
    public function setPolicyDescription(?string $policyDescription): self
    {
        $this->policyDescription = $policyDescription;

        return $this;
    }

    /**
     * Gets or sets the foreign key reference to the related {N:Netsparker.Cloud.Infrastructure.Models.Policy} instance.
     *
     * @return string
     */
    public function getPolicyId(): ?string
    {
        return $this->policyId;
    }

    /**
     * Gets or sets the foreign key reference to the related {N:Netsparker.Cloud.Infrastructure.Models.Policy} instance.
     *
     * @param string $policyId
     *
     * @return self
     */
    public function setPolicyId(?string $policyId): self
    {
        $this->policyId = $policyId;

        return $this;
    }

    /**
     * Gets or sets the name of the policy.
     *
     * @return string
     */
    public function getPolicyName(): ?string
    {
        return $this->policyName;
    }

    /**
     * Gets or sets the name of the policy.
     *
     * @param string $policyName
     *
     * @return self
     */
    public function setPolicyName(?string $policyName): self
    {
        $this->policyName = $policyName;

        return $this;
    }

    /**
     * Gets or sets the description of the report policy.
     *
     * @return string
     */
    public function getReportPolicyDescription(): ?string
    {
        return $this->reportPolicyDescription;
    }

    /**
     * Gets or sets the description of the report policy.
     *
     * @param string $reportPolicyDescription
     *
     * @return self
     */
    public function setReportPolicyDescription(?string $reportPolicyDescription): self
    {
        $this->reportPolicyDescription = $reportPolicyDescription;

        return $this;
    }

    /**
     * Gets or sets the foreign key reference to the related {Netsparker.Cloud.Core.Models.ReportPolicySetting} instance.
     *
     * @return string
     */
    public function getReportPolicyId(): ?string
    {
        return $this->reportPolicyId;
    }

    /**
     * Gets or sets the foreign key reference to the related {Netsparker.Cloud.Core.Models.ReportPolicySetting} instance.
     *
     * @param string $reportPolicyId
     *
     * @return self
     */
    public function setReportPolicyId(?string $reportPolicyId): self
    {
        $this->reportPolicyId = $reportPolicyId;

        return $this;
    }

    /**
     * Gets or sets the name of the report policy.
     *
     * @return string
     */
    public function getReportPolicyName(): ?string
    {
        return $this->reportPolicyName;
    }

    /**
     * Gets or sets the name of the report policy.
     *
     * @param string $reportPolicyName
     *
     * @return self
     */
    public function setReportPolicyName(?string $reportPolicyName): self
    {
        $this->reportPolicyName = $reportPolicyName;

        return $this;
    }

    /**
     * Gets or sets the scan scope.
     *
     * @return string
     */
    public function getScope(): ?string
    {
        return $this->scope;
    }

    /**
     * Gets or sets the scan scope.
     *
     * @param string $scope
     *
     * @return self
     */
    public function setScope(?string $scope): self
    {
        $this->scope = $scope;

        return $this;
    }

    /**
     * Gets or sets the sub path maximum dynamic signatures for heuristic URL Rewrite detection.
     *
     * @return int
     */
    public function getSubPathMaxDynamicSignatures(): ?int
    {
        return $this->subPathMaxDynamicSignatures;
    }

    /**
     * Gets or sets the sub path maximum dynamic signatures for heuristic URL Rewrite detection.
     *
     * @param int $subPathMaxDynamicSignatures
     *
     * @return self
     */
    public function setSubPathMaxDynamicSignatures(?int $subPathMaxDynamicSignatures): self
    {
        $this->subPathMaxDynamicSignatures = $subPathMaxDynamicSignatures;

        return $this;
    }

    /**
     * Gets or sets target path.
     *
     * @return string
     */
    public function getTargetPath(): ?string
    {
        return $this->targetPath;
    }

    /**
     * Gets or sets target path.
     *
     * @param string $targetPath
     *
     * @return self
     */
    public function setTargetPath(?string $targetPath): self
    {
        $this->targetPath = $targetPath;

        return $this;
    }

    /**
     * Gets or sets TargetUrl.
     *
     * @return string
     */
    public function getTargetUrl(): ?string
    {
        return $this->targetUrl;
    }

    /**
     * Gets or sets TargetUrl.
     *
     * @param string $targetUrl
     *
     * @return self
     */
    public function setTargetUrl(?string $targetUrl): self
    {
        $this->targetUrl = $targetUrl;

        return $this;
    }

    /**
     * Gets or sets the target URL root.
     *
     * @return string
     */
    public function getTargetUrlRoot(): ?string
    {
        return $this->targetUrlRoot;
    }

    /**
     * Gets or sets the target URL root.
     *
     * @param string $targetUrlRoot
     *
     * @return self
     */
    public function setTargetUrlRoot(?string $targetUrlRoot): self
    {
        $this->targetUrlRoot = $targetUrlRoot;

        return $this;
    }

    /**
     * Represents a model for carrying out scan time window settings.
     *
     * @return ScanTimeWindowModel
     */
    public function getTimeWindow(): ?ScanTimeWindowModel
    {
        return $this->timeWindow;
    }

    /**
     * Represents a model for carrying out scan time window settings.
     *
     * @param ScanTimeWindowModel $timeWindow
     *
     * @return self
     */
    public function setTimeWindow(?ScanTimeWindowModel $timeWindow): self
    {
        $this->timeWindow = $timeWindow;

        return $this;
    }

    /**
     * Gets or sets the total vulnerability count without information vulnerabilities.
     *
     * @return int
     */
    public function getTotalVulnerabilityCount(): ?int
    {
        return $this->totalVulnerabilityCount;
    }

    /**
     * Gets or sets the total vulnerability count without information vulnerabilities.
     *
     * @param int $totalVulnerabilityCount
     *
     * @return self
     */
    public function setTotalVulnerabilityCount(?int $totalVulnerabilityCount): self
    {
        $this->totalVulnerabilityCount = $totalVulnerabilityCount;

        return $this;
    }

    /**
     * Gets or sets the extensions that will be analyzed for heuristic URL Rewrite detection.
     *
     * @return string
     */
    public function getUrlRewriteAnalyzableExtensions(): ?string
    {
        return $this->urlRewriteAnalyzableExtensions;
    }

    /**
     * Gets or sets the extensions that will be analyzed for heuristic URL Rewrite detection.
     *
     * @param string $urlRewriteAnalyzableExtensions
     *
     * @return self
     */
    public function setUrlRewriteAnalyzableExtensions(?string $urlRewriteAnalyzableExtensions): self
    {
        $this->urlRewriteAnalyzableExtensions = $urlRewriteAnalyzableExtensions;

        return $this;
    }

    /**
     * Gets or sets the block separators for heuristic URL Rewrite detection.
     *
     * @return string
     */
    public function getUrlRewriteBlockSeparators(): ?string
    {
        return $this->urlRewriteBlockSeparators;
    }

    /**
     * Gets or sets the block separators for heuristic URL Rewrite detection.
     *
     * @param string $urlRewriteBlockSeparators
     *
     * @return self
     */
    public function setUrlRewriteBlockSeparators(?string $urlRewriteBlockSeparators): self
    {
        $this->urlRewriteBlockSeparators = $urlRewriteBlockSeparators;

        return $this;
    }

    /**
     * Gets or sets the URL Rewrite mode.
     *
     * @return string
     */
    public function getUrlRewriteMode(): ?string
    {
        return $this->urlRewriteMode;
    }

    /**
     * Gets or sets the URL Rewrite mode.
     *
     * @param string $urlRewriteMode
     *
     * @return self
     */
    public function setUrlRewriteMode(?string $urlRewriteMode): self
    {
        $this->urlRewriteMode = $urlRewriteMode;

        return $this;
    }

    /**
     * Gets or sets the URL Rewrite rules.
     *
     * @return UrlRewriteRuleModel[]
     */
    public function getUrlRewriteRules(): ?array
    {
        return $this->urlRewriteRules;
    }

    /**
     * Gets or sets the URL Rewrite rules.
     *
     * @param UrlRewriteRuleModel[] $urlRewriteRules
     *
     * @return self
     */
    public function setUrlRewriteRules(?array $urlRewriteRules): self
    {
        $this->urlRewriteRules = $urlRewriteRules;

        return $this;
    }

    /**
     * Gets or sets the user identifier.
     *
     * @return string
     */
    public function getUserId(): ?string
    {
        return $this->userId;
    }

    /**
     * Gets or sets the user identifier.
     *
     * @param string $userId
     *
     * @return self
     */
    public function setUserId(?string $userId): self
    {
        $this->userId = $userId;

        return $this;
    }

    /**
     * Represents optional commit info comes from Netsparker continuous integration plugins.
     *
     * @return VcsCommitInfo
     */
    public function getVcsCommitInfo(): ?VcsCommitInfo
    {
        return $this->vcsCommitInfo;
    }

    /**
     * Represents optional commit info comes from Netsparker continuous integration plugins.
     *
     * @param VcsCommitInfo $vcsCommitInfo
     *
     * @return self
     */
    public function setVcsCommitInfo(?VcsCommitInfo $vcsCommitInfo): self
    {
        $this->vcsCommitInfo = $vcsCommitInfo;

        return $this;
    }

    /**
     * Gets or sets the name of the website.
     *
     * @return string
     */
    public function getWebsiteName(): ?string
    {
        return $this->websiteName;
    }

    /**
     * Gets or sets the name of the website.
     *
     * @param string $websiteName
     *
     * @return self
     */
    public function setWebsiteName(?string $websiteName): self
    {
        $this->websiteName = $websiteName;

        return $this;
    }

    /**
     * Gets or sets the website URL.
     *
     * @return string
     */
    public function getWebsiteUrl(): ?string
    {
        return $this->websiteUrl;
    }

    /**
     * Gets or sets the website URL.
     *
     * @param string $websiteUrl
     *
     * @return self
     */
    public function setWebsiteUrl(?string $websiteUrl): self
    {
        $this->websiteUrl = $websiteUrl;

        return $this;
    }

    /**
     * Gets or sets the number of steps (HTTP requests) completed thus far.
     *
     * @return int
     */
    public function getCompletedSteps(): ?int
    {
        return $this->completedSteps;
    }

    /**
     * Gets or sets the number of steps (HTTP requests) completed thus far.
     *
     * @param int $completedSteps
     *
     * @return self
     */
    public function setCompletedSteps(?int $completedSteps): self
    {
        $this->completedSteps = $completedSteps;

        return $this;
    }

    /**
     * Gets or sets the estimated launch time in minutes for queued scans.
     *
     * @return int
     */
    public function getEstimatedLaunchTime(): ?int
    {
        return $this->estimatedLaunchTime;
    }

    /**
     * Gets or sets the estimated launch time in minutes for queued scans.
     *
     * @param int $estimatedLaunchTime
     *
     * @return self
     */
    public function setEstimatedLaunchTime(?int $estimatedLaunchTime): self
    {
        $this->estimatedLaunchTime = $estimatedLaunchTime;

        return $this;
    }

    /**
     * Gets or sets the estimated total number of steps (HTTP requests) that this scan will undertake.
     *
     * @return int
     */
    public function getEstimatedSteps(): ?int
    {
        return $this->estimatedSteps;
    }

    /**
     * Gets or sets the estimated total number of steps (HTTP requests) that this scan will undertake.
     *
     * @param int $estimatedSteps
     *
     * @return self
     */
    public function setEstimatedSteps(?int $estimatedSteps): self
    {
        $this->estimatedSteps = $estimatedSteps;

        return $this;
    }

    /**
     * Gets or sets FailureReason.
     *
     * @return string
     */
    public function getFailureReason(): ?string
    {
        return $this->failureReason;
    }

    /**
     * Gets or sets FailureReason.
     *
     * @param string $failureReason
     *
     * @return self
     */
    public function setFailureReason(?string $failureReason): self
    {
        $this->failureReason = $failureReason;

        return $this;
    }

    /**
     * Gets the failure reason description.
     *
     * @return string
     */
    public function getFailureReasonDescription(): ?string
    {
        return $this->failureReasonDescription;
    }

    /**
     * Gets the failure reason description.
     *
     * @param string $failureReasonDescription
     *
     * @return self
     */
    public function setFailureReasonDescription(?string $failureReasonDescription): self
    {
        $this->failureReasonDescription = $failureReasonDescription;

        return $this;
    }

    /**
     * Gets the failure reason string.
     *
     * @return string
     */
    public function getFailureReasonString(): ?string
    {
        return $this->failureReasonString;
    }

    /**
     * Gets the failure reason string.
     *
     * @param string $failureReasonString
     *
     * @return self
     */
    public function setFailureReasonString(?string $failureReasonString): self
    {
        $this->failureReasonString = $failureReasonString;

        return $this;
    }

    /**
     * Gets or sets the global threat level.
     *
     * @return string
     */
    public function getGlobalThreatLevel(): ?string
    {
        return $this->globalThreatLevel;
    }

    /**
     * Gets or sets the global threat level.
     *
     * @param string $globalThreatLevel
     *
     * @return self
     */
    public function setGlobalThreatLevel(?string $globalThreatLevel): self
    {
        $this->globalThreatLevel = $globalThreatLevel;

        return $this;
    }

    /**
     * Gets the global vulnerability critical count.
     *
     * @return int
     */
    public function getGlobalVulnerabilityCriticalCount(): ?int
    {
        return $this->globalVulnerabilityCriticalCount;
    }

    /**
     * Gets the global vulnerability critical count.
     *
     * @param int $globalVulnerabilityCriticalCount
     *
     * @return self
     */
    public function setGlobalVulnerabilityCriticalCount(?int $globalVulnerabilityCriticalCount): self
    {
        $this->globalVulnerabilityCriticalCount = $globalVulnerabilityCriticalCount;

        return $this;
    }

    /**
     * Gets the global vulnerability high count.
     *
     * @return int
     */
    public function getGlobalVulnerabilityHighCount(): ?int
    {
        return $this->globalVulnerabilityHighCount;
    }

    /**
     * Gets the global vulnerability high count.
     *
     * @param int $globalVulnerabilityHighCount
     *
     * @return self
     */
    public function setGlobalVulnerabilityHighCount(?int $globalVulnerabilityHighCount): self
    {
        $this->globalVulnerabilityHighCount = $globalVulnerabilityHighCount;

        return $this;
    }

    /**
     * Gets the global vulnerability information count.
     *
     * @return int
     */
    public function getGlobalVulnerabilityInfoCount(): ?int
    {
        return $this->globalVulnerabilityInfoCount;
    }

    /**
     * Gets the global vulnerability information count.
     *
     * @param int $globalVulnerabilityInfoCount
     *
     * @return self
     */
    public function setGlobalVulnerabilityInfoCount(?int $globalVulnerabilityInfoCount): self
    {
        $this->globalVulnerabilityInfoCount = $globalVulnerabilityInfoCount;

        return $this;
    }

    /**
     * Gets the global vulnerability low count.
     *
     * @return int
     */
    public function getGlobalVulnerabilityLowCount(): ?int
    {
        return $this->globalVulnerabilityLowCount;
    }

    /**
     * Gets the global vulnerability low count.
     *
     * @param int $globalVulnerabilityLowCount
     *
     * @return self
     */
    public function setGlobalVulnerabilityLowCount(?int $globalVulnerabilityLowCount): self
    {
        $this->globalVulnerabilityLowCount = $globalVulnerabilityLowCount;

        return $this;
    }

    /**
     * Gets the global vulnerability medium count.
     *
     * @return int
     */
    public function getGlobalVulnerabilityMediumCount(): ?int
    {
        return $this->globalVulnerabilityMediumCount;
    }

    /**
     * Gets the global vulnerability medium count.
     *
     * @param int $globalVulnerabilityMediumCount
     *
     * @return self
     */
    public function setGlobalVulnerabilityMediumCount(?int $globalVulnerabilityMediumCount): self
    {
        $this->globalVulnerabilityMediumCount = $globalVulnerabilityMediumCount;

        return $this;
    }

    /**
     * Gets or sets Id.
     *
     * @return string
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Gets or sets Id.
     *
     * @param string $id
     *
     * @return self
     */
    public function setId(?string $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets a value indicating whether scan is completed  with any state.
     *
     * @return bool
     */
    public function getIsCompleted(): ?bool
    {
        return $this->isCompleted;
    }

    /**
     * Gets a value indicating whether scan is completed  with any state.
     *
     * @param bool $isCompleted
     *
     * @return self
     */
    public function setIsCompleted(?bool $isCompleted): self
    {
        $this->isCompleted = $isCompleted;

        return $this;
    }

    /**
     * Gets the completed percentage.
     *
     * @return int
     */
    public function getPercentage(): ?int
    {
        return $this->percentage;
    }

    /**
     * Gets the completed percentage.
     *
     * @param int $percentage
     *
     * @return self
     */
    public function setPercentage(?int $percentage): self
    {
        $this->percentage = $percentage;

        return $this;
    }

    /**
     * Gets or sets the Phase.
     *
     * @return string
     */
    public function getPhase(): ?string
    {
        return $this->phase;
    }

    /**
     * Gets or sets the Phase.
     *
     * @param string $phase
     *
     * @return self
     */
    public function setPhase(?string $phase): self
    {
        $this->phase = $phase;

        return $this;
    }

    /**
     * Gets or sets the scan group identifier.
     *
     * @return string
     */
    public function getScanTaskGroupId(): ?string
    {
        return $this->scanTaskGroupId;
    }

    /**
     * Gets or sets the scan group identifier.
     *
     * @param string $scanTaskGroupId
     *
     * @return self
     */
    public function setScanTaskGroupId(?string $scanTaskGroupId): self
    {
        $this->scanTaskGroupId = $scanTaskGroupId;

        return $this;
    }

    /**
     * Gets or sets the type of the scan.
     *
     * @return string
     */
    public function getScanType(): ?string
    {
        return $this->scanType;
    }

    /**
     * Gets or sets the type of the scan.
     *
     * @param string $scanType
     *
     * @return self
     */
    public function setScanType(?string $scanType): self
    {
        $this->scanType = $scanType;

        return $this;
    }

    /**
     * Gets or sets the scheduled scan identifier.
     *
     * @return string
     */
    public function getScheduledScanId(): ?string
    {
        return $this->scheduledScanId;
    }

    /**
     * Gets or sets the scheduled scan identifier.
     *
     * @param string $scheduledScanId
     *
     * @return self
     */
    public function setScheduledScanId(?string $scheduledScanId): self
    {
        $this->scheduledScanId = $scheduledScanId;

        return $this;
    }

    /**
     * Gets or sets State.
     *
     * @return string
     */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * Gets or sets State.
     *
     * @param string $state
     *
     * @return self
     */
    public function setState(?string $state): self
    {
        $this->state = $state;

        return $this;
    }

    /**
     * Gets or sets the date and time at which this task state was last changed.
     *
     * @return \DateTime
     */
    public function getStateChanged(): ?\DateTime
    {
        return $this->stateChanged;
    }

    /**
     * Gets or sets the date and time at which this task state was last changed.
     *
     * @param \DateTime $stateChanged
     *
     * @return self
     */
    public function setStateChanged(?\DateTime $stateChanged): self
    {
        $this->stateChanged = $stateChanged;

        return $this;
    }

    /**
     * Gets or sets the threat level.
     *
     * @return string
     */
    public function getThreatLevel(): ?string
    {
        return $this->threatLevel;
    }

    /**
     * Gets or sets the threat level.
     *
     * @param string $threatLevel
     *
     * @return self
     */
    public function setThreatLevel(?string $threatLevel): self
    {
        $this->threatLevel = $threatLevel;

        return $this;
    }

    /**
     * Gets or sets the count of vulnerabilities with critical level severity.
     *
     * @return int
     */
    public function getVulnerabilityCriticalCount(): ?int
    {
        return $this->vulnerabilityCriticalCount;
    }

    /**
     * Gets or sets the count of vulnerabilities with critical level severity.
     *
     * @param int $vulnerabilityCriticalCount
     *
     * @return self
     */
    public function setVulnerabilityCriticalCount(?int $vulnerabilityCriticalCount): self
    {
        $this->vulnerabilityCriticalCount = $vulnerabilityCriticalCount;

        return $this;
    }

    /**
     * Gets or sets the count of vulnerabilities with high level severity.
     *
     * @return int
     */
    public function getVulnerabilityHighCount(): ?int
    {
        return $this->vulnerabilityHighCount;
    }

    /**
     * Gets or sets the count of vulnerabilities with high level severity.
     *
     * @param int $vulnerabilityHighCount
     *
     * @return self
     */
    public function setVulnerabilityHighCount(?int $vulnerabilityHighCount): self
    {
        $this->vulnerabilityHighCount = $vulnerabilityHighCount;

        return $this;
    }

    /**
     * Gets or sets the count of vulnerabilities with information level severity.
     *
     * @return int
     */
    public function getVulnerabilityInfoCount(): ?int
    {
        return $this->vulnerabilityInfoCount;
    }

    /**
     * Gets or sets the count of vulnerabilities with information level severity.
     *
     * @param int $vulnerabilityInfoCount
     *
     * @return self
     */
    public function setVulnerabilityInfoCount(?int $vulnerabilityInfoCount): self
    {
        $this->vulnerabilityInfoCount = $vulnerabilityInfoCount;

        return $this;
    }

    /**
     * Gets or sets the count of vulnerabilities with low level severity.
     *
     * @return int
     */
    public function getVulnerabilityLowCount(): ?int
    {
        return $this->vulnerabilityLowCount;
    }

    /**
     * Gets or sets the count of vulnerabilities with low level severity.
     *
     * @param int $vulnerabilityLowCount
     *
     * @return self
     */
    public function setVulnerabilityLowCount(?int $vulnerabilityLowCount): self
    {
        $this->vulnerabilityLowCount = $vulnerabilityLowCount;

        return $this;
    }

    /**
     * Gets or sets the count of vulnerabilities with medium level severity.
     *
     * @return int
     */
    public function getVulnerabilityMediumCount(): ?int
    {
        return $this->vulnerabilityMediumCount;
    }

    /**
     * Gets or sets the count of vulnerabilities with medium level severity.
     *
     * @param int $vulnerabilityMediumCount
     *
     * @return self
     */
    public function setVulnerabilityMediumCount(?int $vulnerabilityMediumCount): self
    {
        $this->vulnerabilityMediumCount = $vulnerabilityMediumCount;

        return $this;
    }

    /**
     * Gets the website identifier.
     *
     * @return string
     */
    public function getWebsiteId(): ?string
    {
        return $this->websiteId;
    }

    /**
     * Gets the website identifier.
     *
     * @param string $websiteId
     *
     * @return self
     */
    public function setWebsiteId(?string $websiteId): self
    {
        $this->websiteId = $websiteId;

        return $this;
    }
}
