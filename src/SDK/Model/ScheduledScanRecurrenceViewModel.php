<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Model;

class ScheduledScanRecurrenceViewModel
{
    /**
     * The {Netsparker.Cloud.Dates.Recurring.Enums.RepeatTypes}.
     *
     * @var string
     */
    protected $repeatType;
    /**
     * The interval.
     *
     * @var int
     */
    protected $interval;
    /**
     * The start date.
     *
     * @var \DateTime
     */
    protected $startDate;
    /**
     * The ending type.
     *
     * @var string
     */
    protected $endingType;
    /**
     * The day of weeks.
     *
     * @var string[]
     */
    protected $daysOfWeek;
    /**
     * The months of year.
     *
     * @var string[]
     */
    protected $monthsOfYear;
    /**
     * The ordinals.
     *
     * @var string
     */
    protected $ordinal;
    /**
     * The ending date.
     *
     * @var string
     */
    protected $endOn;
    /**
     * The limit of the scheduled scan executions.
     *
     * @var int
     */
    protected $endOnOccurences;
    /**
     * The day of month.
     *
     * @var int
     */
    protected $dayOfMonth;
    /**
     * The ending date.
     *
     * @var \DateTime
     */
    protected $endOnDate;
    /**
     * The recurrence builder.
     *
     * @var string
     */
    protected $dayOfWeek;

    /**
     * The {Netsparker.Cloud.Dates.Recurring.Enums.RepeatTypes}.
     *
     * @return string
     */
    public function getRepeatType(): ?string
    {
        return $this->repeatType;
    }

    /**
     * The {Netsparker.Cloud.Dates.Recurring.Enums.RepeatTypes}.
     *
     * @param string $repeatType
     *
     * @return self
     */
    public function setRepeatType(?string $repeatType): self
    {
        $this->repeatType = $repeatType;

        return $this;
    }

    /**
     * The interval.
     *
     * @return int
     */
    public function getInterval(): ?int
    {
        return $this->interval;
    }

    /**
     * The interval.
     *
     * @param int $interval
     *
     * @return self
     */
    public function setInterval(?int $interval): self
    {
        $this->interval = $interval;

        return $this;
    }

    /**
     * The start date.
     *
     * @return \DateTime
     */
    public function getStartDate(): ?\DateTime
    {
        return $this->startDate;
    }

    /**
     * The start date.
     *
     * @param \DateTime $startDate
     *
     * @return self
     */
    public function setStartDate(?\DateTime $startDate): self
    {
        $this->startDate = $startDate;

        return $this;
    }

    /**
     * The ending type.
     *
     * @return string
     */
    public function getEndingType(): ?string
    {
        return $this->endingType;
    }

    /**
     * The ending type.
     *
     * @param string $endingType
     *
     * @return self
     */
    public function setEndingType(?string $endingType): self
    {
        $this->endingType = $endingType;

        return $this;
    }

    /**
     * The day of weeks.
     *
     * @return string[]
     */
    public function getDaysOfWeek(): ?array
    {
        return $this->daysOfWeek;
    }

    /**
     * The day of weeks.
     *
     * @param string[] $daysOfWeek
     *
     * @return self
     */
    public function setDaysOfWeek(?array $daysOfWeek): self
    {
        $this->daysOfWeek = $daysOfWeek;

        return $this;
    }

    /**
     * The months of year.
     *
     * @return string[]
     */
    public function getMonthsOfYear(): ?array
    {
        return $this->monthsOfYear;
    }

    /**
     * The months of year.
     *
     * @param string[] $monthsOfYear
     *
     * @return self
     */
    public function setMonthsOfYear(?array $monthsOfYear): self
    {
        $this->monthsOfYear = $monthsOfYear;

        return $this;
    }

    /**
     * The ordinals.
     *
     * @return string
     */
    public function getOrdinal(): ?string
    {
        return $this->ordinal;
    }

    /**
     * The ordinals.
     *
     * @param string $ordinal
     *
     * @return self
     */
    public function setOrdinal(?string $ordinal): self
    {
        $this->ordinal = $ordinal;

        return $this;
    }

    /**
     * The ending date.
     *
     * @return string
     */
    public function getEndOn(): ?string
    {
        return $this->endOn;
    }

    /**
     * The ending date.
     *
     * @param string $endOn
     *
     * @return self
     */
    public function setEndOn(?string $endOn): self
    {
        $this->endOn = $endOn;

        return $this;
    }

    /**
     * The limit of the scheduled scan executions.
     *
     * @return int
     */
    public function getEndOnOccurences(): ?int
    {
        return $this->endOnOccurences;
    }

    /**
     * The limit of the scheduled scan executions.
     *
     * @param int $endOnOccurences
     *
     * @return self
     */
    public function setEndOnOccurences(?int $endOnOccurences): self
    {
        $this->endOnOccurences = $endOnOccurences;

        return $this;
    }

    /**
     * The day of month.
     *
     * @return int
     */
    public function getDayOfMonth(): ?int
    {
        return $this->dayOfMonth;
    }

    /**
     * The day of month.
     *
     * @param int $dayOfMonth
     *
     * @return self
     */
    public function setDayOfMonth(?int $dayOfMonth): self
    {
        $this->dayOfMonth = $dayOfMonth;

        return $this;
    }

    /**
     * The ending date.
     *
     * @return \DateTime
     */
    public function getEndOnDate(): ?\DateTime
    {
        return $this->endOnDate;
    }

    /**
     * The ending date.
     *
     * @param \DateTime $endOnDate
     *
     * @return self
     */
    public function setEndOnDate(?\DateTime $endOnDate): self
    {
        $this->endOnDate = $endOnDate;

        return $this;
    }

    /**
     * The recurrence builder.
     *
     * @return string
     */
    public function getDayOfWeek(): ?string
    {
        return $this->dayOfWeek;
    }

    /**
     * The recurrence builder.
     *
     * @param string $dayOfWeek
     *
     * @return self
     */
    public function setDayOfWeek(?string $dayOfWeek): self
    {
        $this->dayOfWeek = $dayOfWeek;

        return $this;
    }
}
