<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Model;

class ScanNotificationListApiResult
{
    /**
     * Gets or sets the first item on page.
     *
     * @var int
     */
    protected $firstItemOnPage;
    /**
     * Gets or sets a value indicating whether this instance has next page.
     *
     * @var bool
     */
    protected $hasNextPage;
    /**
     * Gets or sets a value indicating whether this instance has previous page.
     *
     * @var bool
     */
    protected $hasPreviousPage;
    /**
     * Gets or sets a value indicating whether this instance is first page.
     *
     * @var bool
     */
    protected $isFirstPage;
    /**
     * Gets or sets a value indicating whether this instance is last page.
     *
     * @var bool
     */
    protected $isLastPage;
    /**
     * Gets or sets the last item on page.
     *
     * @var int
     */
    protected $lastItemOnPage;
    /**
     * Gets or sets the list.
     *
     * @var ScanNotificationApiModel[]
     */
    protected $list;
    /**
     * Gets or sets the page count.
     *
     * @var int
     */
    protected $pageCount;
    /**
     * Gets or sets the page number.
     *
     * @var int
     */
    protected $pageNumber;
    /**
     * Gets or sets the size of the page.
     *
     * @var int
     */
    protected $pageSize;
    /**
     * Gets or sets the total item count.
     *
     * @var int
     */
    protected $totalItemCount;

    /**
     * Gets or sets the first item on page.
     *
     * @return int
     */
    public function getFirstItemOnPage(): ?int
    {
        return $this->firstItemOnPage;
    }

    /**
     * Gets or sets the first item on page.
     *
     * @param int $firstItemOnPage
     *
     * @return self
     */
    public function setFirstItemOnPage(?int $firstItemOnPage): self
    {
        $this->firstItemOnPage = $firstItemOnPage;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether this instance has next page.
     *
     * @return bool
     */
    public function getHasNextPage(): ?bool
    {
        return $this->hasNextPage;
    }

    /**
     * Gets or sets a value indicating whether this instance has next page.
     *
     * @param bool $hasNextPage
     *
     * @return self
     */
    public function setHasNextPage(?bool $hasNextPage): self
    {
        $this->hasNextPage = $hasNextPage;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether this instance has previous page.
     *
     * @return bool
     */
    public function getHasPreviousPage(): ?bool
    {
        return $this->hasPreviousPage;
    }

    /**
     * Gets or sets a value indicating whether this instance has previous page.
     *
     * @param bool $hasPreviousPage
     *
     * @return self
     */
    public function setHasPreviousPage(?bool $hasPreviousPage): self
    {
        $this->hasPreviousPage = $hasPreviousPage;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether this instance is first page.
     *
     * @return bool
     */
    public function getIsFirstPage(): ?bool
    {
        return $this->isFirstPage;
    }

    /**
     * Gets or sets a value indicating whether this instance is first page.
     *
     * @param bool $isFirstPage
     *
     * @return self
     */
    public function setIsFirstPage(?bool $isFirstPage): self
    {
        $this->isFirstPage = $isFirstPage;

        return $this;
    }

    /**
     * Gets or sets a value indicating whether this instance is last page.
     *
     * @return bool
     */
    public function getIsLastPage(): ?bool
    {
        return $this->isLastPage;
    }

    /**
     * Gets or sets a value indicating whether this instance is last page.
     *
     * @param bool $isLastPage
     *
     * @return self
     */
    public function setIsLastPage(?bool $isLastPage): self
    {
        $this->isLastPage = $isLastPage;

        return $this;
    }

    /**
     * Gets or sets the last item on page.
     *
     * @return int
     */
    public function getLastItemOnPage(): ?int
    {
        return $this->lastItemOnPage;
    }

    /**
     * Gets or sets the last item on page.
     *
     * @param int $lastItemOnPage
     *
     * @return self
     */
    public function setLastItemOnPage(?int $lastItemOnPage): self
    {
        $this->lastItemOnPage = $lastItemOnPage;

        return $this;
    }

    /**
     * Gets or sets the list.
     *
     * @return ScanNotificationApiModel[]
     */
    public function getList(): ?array
    {
        return $this->list;
    }

    /**
     * Gets or sets the list.
     *
     * @param ScanNotificationApiModel[] $list
     *
     * @return self
     */
    public function setList(?array $list): self
    {
        $this->list = $list;

        return $this;
    }

    /**
     * Gets or sets the page count.
     *
     * @return int
     */
    public function getPageCount(): ?int
    {
        return $this->pageCount;
    }

    /**
     * Gets or sets the page count.
     *
     * @param int $pageCount
     *
     * @return self
     */
    public function setPageCount(?int $pageCount): self
    {
        $this->pageCount = $pageCount;

        return $this;
    }

    /**
     * Gets or sets the page number.
     *
     * @return int
     */
    public function getPageNumber(): ?int
    {
        return $this->pageNumber;
    }

    /**
     * Gets or sets the page number.
     *
     * @param int $pageNumber
     *
     * @return self
     */
    public function setPageNumber(?int $pageNumber): self
    {
        $this->pageNumber = $pageNumber;

        return $this;
    }

    /**
     * Gets or sets the size of the page.
     *
     * @return int
     */
    public function getPageSize(): ?int
    {
        return $this->pageSize;
    }

    /**
     * Gets or sets the size of the page.
     *
     * @param int $pageSize
     *
     * @return self
     */
    public function setPageSize(?int $pageSize): self
    {
        $this->pageSize = $pageSize;

        return $this;
    }

    /**
     * Gets or sets the total item count.
     *
     * @return int
     */
    public function getTotalItemCount(): ?int
    {
        return $this->totalItemCount;
    }

    /**
     * Gets or sets the total item count.
     *
     * @param int $totalItemCount
     *
     * @return self
     */
    public function setTotalItemCount(?int $totalItemCount): self
    {
        $this->totalItemCount = $totalItemCount;

        return $this;
    }
}
