<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class ScanTaskModelNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Montross50\\NetsparkerCloud\\SDK\\Model\\ScanTaskModel';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Montross50\NetsparkerCloud\SDK\Model\ScanTaskModel;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Montross50\NetsparkerCloud\SDK\Model\ScanTaskModel();
        if (property_exists($data, 'AdditionalWebsites')) {
            $values = [];
            foreach ($data->{'AdditionalWebsites'} as $value) {
                $values[] = $this->denormalizer->denormalize($value, 'Montross50\\NetsparkerCloud\\SDK\\Model\\AdditionalWebsiteModel', 'json', $context);
            }
            $object->setAdditionalWebsites($values);
        }
        if (property_exists($data, 'AgentId')) {
            $object->setAgentId($data->{'AgentId'});
        }
        if (property_exists($data, 'AgentName')) {
            $object->setAgentName($data->{'AgentName'});
        }
        if (property_exists($data, 'Cookies')) {
            $object->setCookies($data->{'Cookies'});
        }
        if (property_exists($data, 'CrawlAndAttack')) {
            $object->setCrawlAndAttack($data->{'CrawlAndAttack'});
        }
        if (property_exists($data, 'EnableHeuristicChecksInCustomUrlRewrite')) {
            $object->setEnableHeuristicChecksInCustomUrlRewrite($data->{'EnableHeuristicChecksInCustomUrlRewrite'});
        }
        if (property_exists($data, 'ExcludedLinks')) {
            $object->setExcludedLinks($data->{'ExcludedLinks'});
        }
        if (property_exists($data, 'ExcludeLinks')) {
            $object->setExcludeLinks($data->{'ExcludeLinks'});
        }
        if (property_exists($data, 'DisallowedHttpMethods')) {
            $object->setDisallowedHttpMethods($data->{'DisallowedHttpMethods'});
        }
        if (property_exists($data, 'FindAndFollowNewLinks')) {
            $object->setFindAndFollowNewLinks($data->{'FindAndFollowNewLinks'});
        }
        if (property_exists($data, 'ImportedLinks')) {
            $object->setImportedLinks($data->{'ImportedLinks'});
        }
        if (property_exists($data, 'DesktopScanId')) {
            $object->setDesktopScanId($data->{'DesktopScanId'});
        }
        if (property_exists($data, 'Initiated')) {
            $object->setInitiated($data->{'Initiated'});
        }
        if (property_exists($data, 'InitiatedDate')) {
            $object->setInitiatedDate($data->{'InitiatedDate'});
        }
        if (property_exists($data, 'InitiatedAt')) {
            $object->setInitiatedAt(\DateTime::createFromFormat("Y-m-d\TH:i:sP", $data->{'InitiatedAt'}));
        }
        if (property_exists($data, 'MaxDynamicSignatures')) {
            $object->setMaxDynamicSignatures($data->{'MaxDynamicSignatures'});
        }
        if (property_exists($data, 'MaxScanDuration')) {
            $object->setMaxScanDuration($data->{'MaxScanDuration'});
        }
        if (property_exists($data, 'PolicyDescription')) {
            $object->setPolicyDescription($data->{'PolicyDescription'});
        }
        if (property_exists($data, 'PolicyId')) {
            $object->setPolicyId($data->{'PolicyId'});
        }
        if (property_exists($data, 'PolicyName')) {
            $object->setPolicyName($data->{'PolicyName'});
        }
        if (property_exists($data, 'ReportPolicyDescription')) {
            $object->setReportPolicyDescription($data->{'ReportPolicyDescription'});
        }
        if (property_exists($data, 'ReportPolicyId')) {
            $object->setReportPolicyId($data->{'ReportPolicyId'});
        }
        if (property_exists($data, 'ReportPolicyName')) {
            $object->setReportPolicyName($data->{'ReportPolicyName'});
        }
        if (property_exists($data, 'Scope')) {
            $object->setScope($data->{'Scope'});
        }
        if (property_exists($data, 'SubPathMaxDynamicSignatures')) {
            $object->setSubPathMaxDynamicSignatures($data->{'SubPathMaxDynamicSignatures'});
        }
        if (property_exists($data, 'TargetPath')) {
            $object->setTargetPath($data->{'TargetPath'});
        }
        if (property_exists($data, 'TargetUrl')) {
            $object->setTargetUrl($data->{'TargetUrl'});
        }
        if (property_exists($data, 'TargetUrlRoot')) {
            $object->setTargetUrlRoot($data->{'TargetUrlRoot'});
        }
        if (property_exists($data, 'TimeWindow')) {
            $object->setTimeWindow($this->denormalizer->denormalize($data->{'TimeWindow'}, 'Montross50\\NetsparkerCloud\\SDK\\Model\\ScanTimeWindowModel', 'json', $context));
        }
        if (property_exists($data, 'TotalVulnerabilityCount')) {
            $object->setTotalVulnerabilityCount($data->{'TotalVulnerabilityCount'});
        }
        if (property_exists($data, 'UrlRewriteAnalyzableExtensions')) {
            $object->setUrlRewriteAnalyzableExtensions($data->{'UrlRewriteAnalyzableExtensions'});
        }
        if (property_exists($data, 'UrlRewriteBlockSeparators')) {
            $object->setUrlRewriteBlockSeparators($data->{'UrlRewriteBlockSeparators'});
        }
        if (property_exists($data, 'UrlRewriteMode')) {
            $object->setUrlRewriteMode($data->{'UrlRewriteMode'});
        }
        if (property_exists($data, 'UrlRewriteRules')) {
            $values_1 = [];
            foreach ($data->{'UrlRewriteRules'} as $value_1) {
                $values_1[] = $this->denormalizer->denormalize($value_1, 'Montross50\\NetsparkerCloud\\SDK\\Model\\UrlRewriteRuleModel', 'json', $context);
            }
            $object->setUrlRewriteRules($values_1);
        }
        if (property_exists($data, 'UserId')) {
            $object->setUserId($data->{'UserId'});
        }
        if (property_exists($data, 'VcsCommitInfo')) {
            $object->setVcsCommitInfo($this->denormalizer->denormalize($data->{'VcsCommitInfo'}, 'Montross50\\NetsparkerCloud\\SDK\\Model\\VcsCommitInfo', 'json', $context));
        }
        if (property_exists($data, 'WebsiteName')) {
            $object->setWebsiteName($data->{'WebsiteName'});
        }
        if (property_exists($data, 'WebsiteUrl')) {
            $object->setWebsiteUrl($data->{'WebsiteUrl'});
        }
        if (property_exists($data, 'CompletedSteps')) {
            $object->setCompletedSteps($data->{'CompletedSteps'});
        }
        if (property_exists($data, 'EstimatedLaunchTime')) {
            $object->setEstimatedLaunchTime($data->{'EstimatedLaunchTime'});
        }
        if (property_exists($data, 'EstimatedSteps')) {
            $object->setEstimatedSteps($data->{'EstimatedSteps'});
        }
        if (property_exists($data, 'FailureReason')) {
            $object->setFailureReason($data->{'FailureReason'});
        }
        if (property_exists($data, 'FailureReasonDescription')) {
            $object->setFailureReasonDescription($data->{'FailureReasonDescription'});
        }
        if (property_exists($data, 'FailureReasonString')) {
            $object->setFailureReasonString($data->{'FailureReasonString'});
        }
        if (property_exists($data, 'GlobalThreatLevel')) {
            $object->setGlobalThreatLevel($data->{'GlobalThreatLevel'});
        }
        if (property_exists($data, 'GlobalVulnerabilityCriticalCount')) {
            $object->setGlobalVulnerabilityCriticalCount($data->{'GlobalVulnerabilityCriticalCount'});
        }
        if (property_exists($data, 'GlobalVulnerabilityHighCount')) {
            $object->setGlobalVulnerabilityHighCount($data->{'GlobalVulnerabilityHighCount'});
        }
        if (property_exists($data, 'GlobalVulnerabilityInfoCount')) {
            $object->setGlobalVulnerabilityInfoCount($data->{'GlobalVulnerabilityInfoCount'});
        }
        if (property_exists($data, 'GlobalVulnerabilityLowCount')) {
            $object->setGlobalVulnerabilityLowCount($data->{'GlobalVulnerabilityLowCount'});
        }
        if (property_exists($data, 'GlobalVulnerabilityMediumCount')) {
            $object->setGlobalVulnerabilityMediumCount($data->{'GlobalVulnerabilityMediumCount'});
        }
        if (property_exists($data, 'Id')) {
            $object->setId($data->{'Id'});
        }
        if (property_exists($data, 'IsCompleted')) {
            $object->setIsCompleted($data->{'IsCompleted'});
        }
        if (property_exists($data, 'Percentage')) {
            $object->setPercentage($data->{'Percentage'});
        }
        if (property_exists($data, 'Phase')) {
            $object->setPhase($data->{'Phase'});
        }
        if (property_exists($data, 'ScanTaskGroupId')) {
            $object->setScanTaskGroupId($data->{'ScanTaskGroupId'});
        }
        if (property_exists($data, 'ScanType')) {
            $object->setScanType($data->{'ScanType'});
        }
        if (property_exists($data, 'ScheduledScanId')) {
            $object->setScheduledScanId($data->{'ScheduledScanId'});
        }
        if (property_exists($data, 'State')) {
            $object->setState($data->{'State'});
        }
        if (property_exists($data, 'StateChanged')) {
            $object->setStateChanged(\DateTime::createFromFormat("Y-m-d\TH:i:sP", $data->{'StateChanged'}));
        }
        if (property_exists($data, 'ThreatLevel')) {
            $object->setThreatLevel($data->{'ThreatLevel'});
        }
        if (property_exists($data, 'VulnerabilityCriticalCount')) {
            $object->setVulnerabilityCriticalCount($data->{'VulnerabilityCriticalCount'});
        }
        if (property_exists($data, 'VulnerabilityHighCount')) {
            $object->setVulnerabilityHighCount($data->{'VulnerabilityHighCount'});
        }
        if (property_exists($data, 'VulnerabilityInfoCount')) {
            $object->setVulnerabilityInfoCount($data->{'VulnerabilityInfoCount'});
        }
        if (property_exists($data, 'VulnerabilityLowCount')) {
            $object->setVulnerabilityLowCount($data->{'VulnerabilityLowCount'});
        }
        if (property_exists($data, 'VulnerabilityMediumCount')) {
            $object->setVulnerabilityMediumCount($data->{'VulnerabilityMediumCount'});
        }
        if (property_exists($data, 'WebsiteId')) {
            $object->setWebsiteId($data->{'WebsiteId'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAdditionalWebsites()) {
            $values = [];
            foreach ($object->getAdditionalWebsites() as $value) {
                $values[] = $this->normalizer->normalize($value, 'json', $context);
            }
            $data->{'AdditionalWebsites'} = $values;
        }
        if (null !== $object->getAgentId()) {
            $data->{'AgentId'} = $object->getAgentId();
        }
        if (null !== $object->getAgentName()) {
            $data->{'AgentName'} = $object->getAgentName();
        }
        if (null !== $object->getCookies()) {
            $data->{'Cookies'} = $object->getCookies();
        }
        if (null !== $object->getCrawlAndAttack()) {
            $data->{'CrawlAndAttack'} = $object->getCrawlAndAttack();
        }
        if (null !== $object->getEnableHeuristicChecksInCustomUrlRewrite()) {
            $data->{'EnableHeuristicChecksInCustomUrlRewrite'} = $object->getEnableHeuristicChecksInCustomUrlRewrite();
        }
        if (null !== $object->getExcludedLinks()) {
            $data->{'ExcludedLinks'} = $object->getExcludedLinks();
        }
        if (null !== $object->getExcludeLinks()) {
            $data->{'ExcludeLinks'} = $object->getExcludeLinks();
        }
        if (null !== $object->getDisallowedHttpMethods()) {
            $data->{'DisallowedHttpMethods'} = $object->getDisallowedHttpMethods();
        }
        if (null !== $object->getFindAndFollowNewLinks()) {
            $data->{'FindAndFollowNewLinks'} = $object->getFindAndFollowNewLinks();
        }
        if (null !== $object->getImportedLinks()) {
            $data->{'ImportedLinks'} = $object->getImportedLinks();
        }
        if (null !== $object->getDesktopScanId()) {
            $data->{'DesktopScanId'} = $object->getDesktopScanId();
        }
        if (null !== $object->getInitiated()) {
            $data->{'Initiated'} = $object->getInitiated();
        }
        if (null !== $object->getInitiatedDate()) {
            $data->{'InitiatedDate'} = $object->getInitiatedDate();
        }
        if (null !== $object->getInitiatedAt()) {
            $data->{'InitiatedAt'} = $object->getInitiatedAt()->format("Y-m-d\TH:i:sP");
        }
        if (null !== $object->getMaxDynamicSignatures()) {
            $data->{'MaxDynamicSignatures'} = $object->getMaxDynamicSignatures();
        }
        if (null !== $object->getMaxScanDuration()) {
            $data->{'MaxScanDuration'} = $object->getMaxScanDuration();
        }
        if (null !== $object->getPolicyDescription()) {
            $data->{'PolicyDescription'} = $object->getPolicyDescription();
        }
        if (null !== $object->getPolicyId()) {
            $data->{'PolicyId'} = $object->getPolicyId();
        }
        if (null !== $object->getPolicyName()) {
            $data->{'PolicyName'} = $object->getPolicyName();
        }
        if (null !== $object->getReportPolicyDescription()) {
            $data->{'ReportPolicyDescription'} = $object->getReportPolicyDescription();
        }
        if (null !== $object->getReportPolicyId()) {
            $data->{'ReportPolicyId'} = $object->getReportPolicyId();
        }
        if (null !== $object->getReportPolicyName()) {
            $data->{'ReportPolicyName'} = $object->getReportPolicyName();
        }
        if (null !== $object->getScope()) {
            $data->{'Scope'} = $object->getScope();
        }
        if (null !== $object->getSubPathMaxDynamicSignatures()) {
            $data->{'SubPathMaxDynamicSignatures'} = $object->getSubPathMaxDynamicSignatures();
        }
        if (null !== $object->getTargetPath()) {
            $data->{'TargetPath'} = $object->getTargetPath();
        }
        if (null !== $object->getTargetUrl()) {
            $data->{'TargetUrl'} = $object->getTargetUrl();
        }
        if (null !== $object->getTargetUrlRoot()) {
            $data->{'TargetUrlRoot'} = $object->getTargetUrlRoot();
        }
        if (null !== $object->getTimeWindow()) {
            $data->{'TimeWindow'} = $this->normalizer->normalize($object->getTimeWindow(), 'json', $context);
        }
        if (null !== $object->getTotalVulnerabilityCount()) {
            $data->{'TotalVulnerabilityCount'} = $object->getTotalVulnerabilityCount();
        }
        if (null !== $object->getUrlRewriteAnalyzableExtensions()) {
            $data->{'UrlRewriteAnalyzableExtensions'} = $object->getUrlRewriteAnalyzableExtensions();
        }
        if (null !== $object->getUrlRewriteBlockSeparators()) {
            $data->{'UrlRewriteBlockSeparators'} = $object->getUrlRewriteBlockSeparators();
        }
        if (null !== $object->getUrlRewriteMode()) {
            $data->{'UrlRewriteMode'} = $object->getUrlRewriteMode();
        }
        if (null !== $object->getUrlRewriteRules()) {
            $values_1 = [];
            foreach ($object->getUrlRewriteRules() as $value_1) {
                $values_1[] = $this->normalizer->normalize($value_1, 'json', $context);
            }
            $data->{'UrlRewriteRules'} = $values_1;
        }
        if (null !== $object->getUserId()) {
            $data->{'UserId'} = $object->getUserId();
        }
        if (null !== $object->getVcsCommitInfo()) {
            $data->{'VcsCommitInfo'} = $this->normalizer->normalize($object->getVcsCommitInfo(), 'json', $context);
        }
        if (null !== $object->getWebsiteName()) {
            $data->{'WebsiteName'} = $object->getWebsiteName();
        }
        if (null !== $object->getWebsiteUrl()) {
            $data->{'WebsiteUrl'} = $object->getWebsiteUrl();
        }
        if (null !== $object->getCompletedSteps()) {
            $data->{'CompletedSteps'} = $object->getCompletedSteps();
        }
        if (null !== $object->getEstimatedLaunchTime()) {
            $data->{'EstimatedLaunchTime'} = $object->getEstimatedLaunchTime();
        }
        if (null !== $object->getEstimatedSteps()) {
            $data->{'EstimatedSteps'} = $object->getEstimatedSteps();
        }
        if (null !== $object->getFailureReason()) {
            $data->{'FailureReason'} = $object->getFailureReason();
        }
        if (null !== $object->getFailureReasonDescription()) {
            $data->{'FailureReasonDescription'} = $object->getFailureReasonDescription();
        }
        if (null !== $object->getFailureReasonString()) {
            $data->{'FailureReasonString'} = $object->getFailureReasonString();
        }
        if (null !== $object->getGlobalThreatLevel()) {
            $data->{'GlobalThreatLevel'} = $object->getGlobalThreatLevel();
        }
        if (null !== $object->getGlobalVulnerabilityCriticalCount()) {
            $data->{'GlobalVulnerabilityCriticalCount'} = $object->getGlobalVulnerabilityCriticalCount();
        }
        if (null !== $object->getGlobalVulnerabilityHighCount()) {
            $data->{'GlobalVulnerabilityHighCount'} = $object->getGlobalVulnerabilityHighCount();
        }
        if (null !== $object->getGlobalVulnerabilityInfoCount()) {
            $data->{'GlobalVulnerabilityInfoCount'} = $object->getGlobalVulnerabilityInfoCount();
        }
        if (null !== $object->getGlobalVulnerabilityLowCount()) {
            $data->{'GlobalVulnerabilityLowCount'} = $object->getGlobalVulnerabilityLowCount();
        }
        if (null !== $object->getGlobalVulnerabilityMediumCount()) {
            $data->{'GlobalVulnerabilityMediumCount'} = $object->getGlobalVulnerabilityMediumCount();
        }
        if (null !== $object->getId()) {
            $data->{'Id'} = $object->getId();
        }
        if (null !== $object->getIsCompleted()) {
            $data->{'IsCompleted'} = $object->getIsCompleted();
        }
        if (null !== $object->getPercentage()) {
            $data->{'Percentage'} = $object->getPercentage();
        }
        if (null !== $object->getPhase()) {
            $data->{'Phase'} = $object->getPhase();
        }
        if (null !== $object->getScanTaskGroupId()) {
            $data->{'ScanTaskGroupId'} = $object->getScanTaskGroupId();
        }
        if (null !== $object->getScanType()) {
            $data->{'ScanType'} = $object->getScanType();
        }
        if (null !== $object->getScheduledScanId()) {
            $data->{'ScheduledScanId'} = $object->getScheduledScanId();
        }
        if (null !== $object->getState()) {
            $data->{'State'} = $object->getState();
        }
        if (null !== $object->getStateChanged()) {
            $data->{'StateChanged'} = $object->getStateChanged()->format("Y-m-d\TH:i:sP");
        }
        if (null !== $object->getThreatLevel()) {
            $data->{'ThreatLevel'} = $object->getThreatLevel();
        }
        if (null !== $object->getVulnerabilityCriticalCount()) {
            $data->{'VulnerabilityCriticalCount'} = $object->getVulnerabilityCriticalCount();
        }
        if (null !== $object->getVulnerabilityHighCount()) {
            $data->{'VulnerabilityHighCount'} = $object->getVulnerabilityHighCount();
        }
        if (null !== $object->getVulnerabilityInfoCount()) {
            $data->{'VulnerabilityInfoCount'} = $object->getVulnerabilityInfoCount();
        }
        if (null !== $object->getVulnerabilityLowCount()) {
            $data->{'VulnerabilityLowCount'} = $object->getVulnerabilityLowCount();
        }
        if (null !== $object->getVulnerabilityMediumCount()) {
            $data->{'VulnerabilityMediumCount'} = $object->getVulnerabilityMediumCount();
        }
        if (null !== $object->getWebsiteId()) {
            $data->{'WebsiteId'} = $object->getWebsiteId();
        }

        return $data;
    }
}
