<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class ApiScanStatusModelNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Montross50\\NetsparkerCloud\\SDK\\Model\\ApiScanStatusModel';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Montross50\NetsparkerCloud\SDK\Model\ApiScanStatusModel;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Montross50\NetsparkerCloud\SDK\Model\ApiScanStatusModel();
        if (property_exists($data, 'CompletedSteps')) {
            $object->setCompletedSteps($data->{'CompletedSteps'});
        }
        if (property_exists($data, 'EstimatedLaunchTime')) {
            $object->setEstimatedLaunchTime($data->{'EstimatedLaunchTime'});
        }
        if (property_exists($data, 'EstimatedSteps')) {
            $object->setEstimatedSteps($data->{'EstimatedSteps'});
        }
        if (property_exists($data, 'State')) {
            $object->setState($data->{'State'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getCompletedSteps()) {
            $data->{'CompletedSteps'} = $object->getCompletedSteps();
        }
        if (null !== $object->getEstimatedLaunchTime()) {
            $data->{'EstimatedLaunchTime'} = $object->getEstimatedLaunchTime();
        }
        if (null !== $object->getEstimatedSteps()) {
            $data->{'EstimatedSteps'} = $object->getEstimatedSteps();
        }
        if (null !== $object->getState()) {
            $data->{'State'} = $object->getState();
        }

        return $data;
    }
}
