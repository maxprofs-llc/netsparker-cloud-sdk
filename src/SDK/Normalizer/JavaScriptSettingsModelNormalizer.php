<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class JavaScriptSettingsModelNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Montross50\\NetsparkerCloud\\SDK\\Model\\JavaScriptSettingsModel';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Montross50\NetsparkerCloud\SDK\Model\JavaScriptSettingsModel;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Montross50\NetsparkerCloud\SDK\Model\JavaScriptSettingsModel();
        if (property_exists($data, 'BailThreshold')) {
            $object->setBailThreshold($data->{'BailThreshold'});
        }
        if (property_exists($data, 'ConfirmOpenRedirectSimulateTimeout')) {
            $object->setConfirmOpenRedirectSimulateTimeout($data->{'ConfirmOpenRedirectSimulateTimeout'});
        }
        if (property_exists($data, 'ConfirmXssSimulateTimeout')) {
            $object->setConfirmXssSimulateTimeout($data->{'ConfirmXssSimulateTimeout'});
        }
        if (property_exists($data, 'DomParserAllowOutOfScopeXmlHttpRequests')) {
            $object->setDomParserAllowOutOfScopeXmlHttpRequests($data->{'DomParserAllowOutOfScopeXmlHttpRequests'});
        }
        if (property_exists($data, 'DomParserDfsLimit')) {
            $object->setDomParserDfsLimit($data->{'DomParserDfsLimit'});
        }
        if (property_exists($data, 'DomParserDotify')) {
            $object->setDomParserDotify($data->{'DomParserDotify'});
        }
        if (property_exists($data, 'DomParserExclusionCssSelector')) {
            $object->setDomParserExclusionCssSelector($data->{'DomParserExclusionCssSelector'});
        }
        if (property_exists($data, 'DomParserExtractResources')) {
            $object->setDomParserExtractResources($data->{'DomParserExtractResources'});
        }
        if (property_exists($data, 'DomParserFilterColonEvents')) {
            $object->setDomParserFilterColonEvents($data->{'DomParserFilterColonEvents'});
        }
        if (property_exists($data, 'DomParserFilterDocumentEvents')) {
            $object->setDomParserFilterDocumentEvents($data->{'DomParserFilterDocumentEvents'});
        }
        if (property_exists($data, 'DomParserIgnoreDocumentEvents')) {
            $object->setDomParserIgnoreDocumentEvents($data->{'DomParserIgnoreDocumentEvents'});
        }
        if (property_exists($data, 'DomParserLoadUrlTimeout')) {
            $object->setDomParserLoadUrlTimeout($data->{'DomParserLoadUrlTimeout'});
        }
        if (property_exists($data, 'DomParserMaxOptionElementsPerSelect')) {
            $object->setDomParserMaxOptionElementsPerSelect($data->{'DomParserMaxOptionElementsPerSelect'});
        }
        if (property_exists($data, 'DomParserPersistentJavaScriptCookies')) {
            $object->setDomParserPersistentJavaScriptCookies($data->{'DomParserPersistentJavaScriptCookies'});
        }
        if (property_exists($data, 'DomParserPreSimulateWait')) {
            $object->setDomParserPreSimulateWait($data->{'DomParserPreSimulateWait'});
        }
        if (property_exists($data, 'DomParserSimulationTimeout')) {
            $object->setDomParserSimulationTimeout($data->{'DomParserSimulationTimeout'});
        }
        if (property_exists($data, 'EnableDomParser')) {
            $object->setEnableDomParser($data->{'EnableDomParser'});
        }
        if (property_exists($data, 'IntereventTimeout')) {
            $object->setIntereventTimeout($data->{'IntereventTimeout'});
        }
        if (property_exists($data, 'SkipElementCount')) {
            $object->setSkipElementCount($data->{'SkipElementCount'});
        }
        if (property_exists($data, 'SkipThreshold')) {
            $object->setSkipThreshold($data->{'SkipThreshold'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getBailThreshold()) {
            $data->{'BailThreshold'} = $object->getBailThreshold();
        }
        if (null !== $object->getConfirmOpenRedirectSimulateTimeout()) {
            $data->{'ConfirmOpenRedirectSimulateTimeout'} = $object->getConfirmOpenRedirectSimulateTimeout();
        }
        if (null !== $object->getConfirmXssSimulateTimeout()) {
            $data->{'ConfirmXssSimulateTimeout'} = $object->getConfirmXssSimulateTimeout();
        }
        if (null !== $object->getDomParserAllowOutOfScopeXmlHttpRequests()) {
            $data->{'DomParserAllowOutOfScopeXmlHttpRequests'} = $object->getDomParserAllowOutOfScopeXmlHttpRequests();
        }
        if (null !== $object->getDomParserDfsLimit()) {
            $data->{'DomParserDfsLimit'} = $object->getDomParserDfsLimit();
        }
        if (null !== $object->getDomParserDotify()) {
            $data->{'DomParserDotify'} = $object->getDomParserDotify();
        }
        if (null !== $object->getDomParserExclusionCssSelector()) {
            $data->{'DomParserExclusionCssSelector'} = $object->getDomParserExclusionCssSelector();
        }
        if (null !== $object->getDomParserExtractResources()) {
            $data->{'DomParserExtractResources'} = $object->getDomParserExtractResources();
        }
        if (null !== $object->getDomParserFilterColonEvents()) {
            $data->{'DomParserFilterColonEvents'} = $object->getDomParserFilterColonEvents();
        }
        if (null !== $object->getDomParserFilterDocumentEvents()) {
            $data->{'DomParserFilterDocumentEvents'} = $object->getDomParserFilterDocumentEvents();
        }
        if (null !== $object->getDomParserIgnoreDocumentEvents()) {
            $data->{'DomParserIgnoreDocumentEvents'} = $object->getDomParserIgnoreDocumentEvents();
        }
        if (null !== $object->getDomParserLoadUrlTimeout()) {
            $data->{'DomParserLoadUrlTimeout'} = $object->getDomParserLoadUrlTimeout();
        }
        if (null !== $object->getDomParserMaxOptionElementsPerSelect()) {
            $data->{'DomParserMaxOptionElementsPerSelect'} = $object->getDomParserMaxOptionElementsPerSelect();
        }
        if (null !== $object->getDomParserPersistentJavaScriptCookies()) {
            $data->{'DomParserPersistentJavaScriptCookies'} = $object->getDomParserPersistentJavaScriptCookies();
        }
        if (null !== $object->getDomParserPreSimulateWait()) {
            $data->{'DomParserPreSimulateWait'} = $object->getDomParserPreSimulateWait();
        }
        if (null !== $object->getDomParserSimulationTimeout()) {
            $data->{'DomParserSimulationTimeout'} = $object->getDomParserSimulationTimeout();
        }
        if (null !== $object->getEnableDomParser()) {
            $data->{'EnableDomParser'} = $object->getEnableDomParser();
        }
        if (null !== $object->getIntereventTimeout()) {
            $data->{'IntereventTimeout'} = $object->getIntereventTimeout();
        }
        if (null !== $object->getSkipElementCount()) {
            $data->{'SkipElementCount'} = $object->getSkipElementCount();
        }
        if (null !== $object->getSkipThreshold()) {
            $data->{'SkipThreshold'} = $object->getSkipThreshold();
        }

        return $data;
    }
}
