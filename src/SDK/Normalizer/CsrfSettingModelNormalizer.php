<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CsrfSettingModelNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Montross50\\NetsparkerCloud\\SDK\\Model\\CsrfSettingModel';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Montross50\NetsparkerCloud\SDK\Model\CsrfSettingModel;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Montross50\NetsparkerCloud\SDK\Model\CsrfSettingModel();
        if (property_exists($data, 'CaptchaIndicators')) {
            $object->setCaptchaIndicators($data->{'CaptchaIndicators'});
        }
        if (property_exists($data, 'LoginFormValues')) {
            $object->setLoginFormValues($data->{'LoginFormValues'});
        }
        if (property_exists($data, 'NonFormValues')) {
            $object->setNonFormValues($data->{'NonFormValues'});
        }
        if (property_exists($data, 'NonInputValues')) {
            $object->setNonInputValues($data->{'NonInputValues'});
        }
        if (property_exists($data, 'UserNameInputs')) {
            $object->setUserNameInputs($data->{'UserNameInputs'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getCaptchaIndicators()) {
            $data->{'CaptchaIndicators'} = $object->getCaptchaIndicators();
        }
        if (null !== $object->getLoginFormValues()) {
            $data->{'LoginFormValues'} = $object->getLoginFormValues();
        }
        if (null !== $object->getNonFormValues()) {
            $data->{'NonFormValues'} = $object->getNonFormValues();
        }
        if (null !== $object->getNonInputValues()) {
            $data->{'NonInputValues'} = $object->getNonInputValues();
        }
        if (null !== $object->getUserNameInputs()) {
            $data->{'UserNameInputs'} = $object->getUserNameInputs();
        }

        return $data;
    }
}
