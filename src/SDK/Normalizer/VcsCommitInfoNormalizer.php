<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class VcsCommitInfoNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Montross50\\NetsparkerCloud\\SDK\\Model\\VcsCommitInfo';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Montross50\NetsparkerCloud\SDK\Model\VcsCommitInfo;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Montross50\NetsparkerCloud\SDK\Model\VcsCommitInfo();
        if (property_exists($data, 'CiBuildConfigurationName')) {
            $object->setCiBuildConfigurationName($data->{'CiBuildConfigurationName'});
        }
        if (property_exists($data, 'CiBuildHasChange')) {
            $object->setCiBuildHasChange($data->{'CiBuildHasChange'});
        }
        if (property_exists($data, 'CiBuildId')) {
            $object->setCiBuildId($data->{'CiBuildId'});
        }
        if (property_exists($data, 'CiBuildServerName')) {
            $object->setCiBuildServerName($data->{'CiBuildServerName'});
        }
        if (property_exists($data, 'CiBuildServerVersion')) {
            $object->setCiBuildServerVersion($data->{'CiBuildServerVersion'});
        }
        if (property_exists($data, 'CiBuildUrl')) {
            $object->setCiBuildUrl($data->{'CiBuildUrl'});
        }
        if (property_exists($data, 'CiNcPluginVersion')) {
            $object->setCiNcPluginVersion($data->{'CiNcPluginVersion'});
        }
        if (property_exists($data, 'CiTimestamp')) {
            $object->setCiTimestamp(\DateTime::createFromFormat("Y-m-d\TH:i:sP", $data->{'CiTimestamp'}));
        }
        if (property_exists($data, 'ComitterId')) {
            $object->setComitterId($data->{'ComitterId'});
        }
        if (property_exists($data, 'Committer')) {
            $object->setCommitter($data->{'Committer'});
        }
        if (property_exists($data, 'CommitterName')) {
            $object->setCommitterName($data->{'CommitterName'});
        }
        if (property_exists($data, 'CommitterOverride')) {
            $object->setCommitterOverride($data->{'CommitterOverride'});
        }
        if (property_exists($data, 'IntegrationSystem')) {
            $object->setIntegrationSystem($data->{'IntegrationSystem'});
        }
        if (property_exists($data, 'IsCommiterExistAndAuthorizedInNc')) {
            $object->setIsCommiterExistAndAuthorizedInNc($data->{'IsCommiterExistAndAuthorizedInNc'});
        }
        if (property_exists($data, 'VcsName')) {
            $object->setVcsName($data->{'VcsName'});
        }
        if (property_exists($data, 'VcsVersion')) {
            $object->setVcsVersion($data->{'VcsVersion'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getCiBuildConfigurationName()) {
            $data->{'CiBuildConfigurationName'} = $object->getCiBuildConfigurationName();
        }
        if (null !== $object->getCiBuildHasChange()) {
            $data->{'CiBuildHasChange'} = $object->getCiBuildHasChange();
        }
        if (null !== $object->getCiBuildId()) {
            $data->{'CiBuildId'} = $object->getCiBuildId();
        }
        if (null !== $object->getCiBuildServerName()) {
            $data->{'CiBuildServerName'} = $object->getCiBuildServerName();
        }
        if (null !== $object->getCiBuildServerVersion()) {
            $data->{'CiBuildServerVersion'} = $object->getCiBuildServerVersion();
        }
        if (null !== $object->getCiBuildUrl()) {
            $data->{'CiBuildUrl'} = $object->getCiBuildUrl();
        }
        if (null !== $object->getCiNcPluginVersion()) {
            $data->{'CiNcPluginVersion'} = $object->getCiNcPluginVersion();
        }
        if (null !== $object->getCiTimestamp()) {
            $data->{'CiTimestamp'} = $object->getCiTimestamp()->format("Y-m-d\TH:i:sP");
        }
        if (null !== $object->getComitterId()) {
            $data->{'ComitterId'} = $object->getComitterId();
        }
        if (null !== $object->getCommitter()) {
            $data->{'Committer'} = $object->getCommitter();
        }
        if (null !== $object->getCommitterName()) {
            $data->{'CommitterName'} = $object->getCommitterName();
        }
        if (null !== $object->getCommitterOverride()) {
            $data->{'CommitterOverride'} = $object->getCommitterOverride();
        }
        if (null !== $object->getIntegrationSystem()) {
            $data->{'IntegrationSystem'} = $object->getIntegrationSystem();
        }
        if (null !== $object->getIsCommiterExistAndAuthorizedInNc()) {
            $data->{'IsCommiterExistAndAuthorizedInNc'} = $object->getIsCommiterExistAndAuthorizedInNc();
        }
        if (null !== $object->getVcsName()) {
            $data->{'VcsName'} = $object->getVcsName();
        }
        if (null !== $object->getVcsVersion()) {
            $data->{'VcsVersion'} = $object->getVcsVersion();
        }

        return $data;
    }
}
