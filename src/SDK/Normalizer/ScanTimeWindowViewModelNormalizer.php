<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class ScanTimeWindowViewModelNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Montross50\\NetsparkerCloud\\SDK\\Model\\ScanTimeWindowViewModel';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Montross50\NetsparkerCloud\SDK\Model\ScanTimeWindowViewModel;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Montross50\NetsparkerCloud\SDK\Model\ScanTimeWindowViewModel();
        if (property_exists($data, 'IsEnabled')) {
            $object->setIsEnabled($data->{'IsEnabled'});
        }
        if (property_exists($data, 'IsEnabledForWebsite')) {
            $object->setIsEnabledForWebsite($data->{'IsEnabledForWebsite'});
        }
        if (property_exists($data, 'IsEnabledForWebsiteGroup')) {
            $object->setIsEnabledForWebsiteGroup($data->{'IsEnabledForWebsiteGroup'});
        }
        if (property_exists($data, 'Items')) {
            $values = [];
            foreach ($data->{'Items'} as $value) {
                $values[] = $this->denormalizer->denormalize($value, 'Montross50\\NetsparkerCloud\\SDK\\Model\\ScanTimeWindowItemViewModel', 'json', $context);
            }
            $object->setItems($values);
        }
        if (property_exists($data, 'ScanCreateType')) {
            $object->setScanCreateType($data->{'ScanCreateType'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getIsEnabled()) {
            $data->{'IsEnabled'} = $object->getIsEnabled();
        }
        if (null !== $object->getIsEnabledForWebsite()) {
            $data->{'IsEnabledForWebsite'} = $object->getIsEnabledForWebsite();
        }
        if (null !== $object->getIsEnabledForWebsiteGroup()) {
            $data->{'IsEnabledForWebsiteGroup'} = $object->getIsEnabledForWebsiteGroup();
        }
        if (null !== $object->getItems()) {
            $values = [];
            foreach ($object->getItems() as $value) {
                $values[] = $this->normalizer->normalize($value, 'json', $context);
            }
            $data->{'Items'} = $values;
        }
        if (null !== $object->getScanCreateType()) {
            $data->{'ScanCreateType'} = $object->getScanCreateType();
        }

        return $data;
    }
}
