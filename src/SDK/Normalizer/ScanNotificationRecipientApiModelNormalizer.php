<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class ScanNotificationRecipientApiModelNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Montross50\\NetsparkerCloud\\SDK\\Model\\ScanNotificationRecipientApiModel';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Montross50\NetsparkerCloud\SDK\Model\ScanNotificationRecipientApiModel;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Montross50\NetsparkerCloud\SDK\Model\ScanNotificationRecipientApiModel();
        if (property_exists($data, 'EmailRecipientUsers')) {
            $values = [];
            foreach ($data->{'EmailRecipientUsers'} as $value) {
                $values[] = $this->denormalizer->denormalize($value, 'Montross50\\NetsparkerCloud\\SDK\\Model\\ScanNotificationRecipientUserApiModel', 'json', $context);
            }
            $object->setEmailRecipientUsers($values);
        }
        if (property_exists($data, 'ExcludedUsers')) {
            $values_1 = [];
            foreach ($data->{'ExcludedUsers'} as $value_1) {
                $values_1[] = $this->denormalizer->denormalize($value_1, 'Montross50\\NetsparkerCloud\\SDK\\Model\\ScanNotificationRecipientUserApiModel', 'json', $context);
            }
            $object->setExcludedUsers($values_1);
        }
        if (property_exists($data, 'IntegrationRecipients')) {
            $values_2 = [];
            foreach ($data->{'IntegrationRecipients'} as $value_2) {
                $values_2[] = $value_2;
            }
            $object->setIntegrationRecipients($values_2);
        }
        if (property_exists($data, 'SmsRecipientUsers')) {
            $values_3 = [];
            foreach ($data->{'SmsRecipientUsers'} as $value_3) {
                $values_3[] = $this->denormalizer->denormalize($value_3, 'Montross50\\NetsparkerCloud\\SDK\\Model\\ScanNotificationRecipientUserApiModel', 'json', $context);
            }
            $object->setSmsRecipientUsers($values_3);
        }
        if (property_exists($data, 'SpecificEmailRecipients')) {
            $values_4 = [];
            foreach ($data->{'SpecificEmailRecipients'} as $value_4) {
                $values_4[] = $value_4;
            }
            $object->setSpecificEmailRecipients($values_4);
        }
        if (property_exists($data, 'SpecificSmsRecipients')) {
            $values_5 = [];
            foreach ($data->{'SpecificSmsRecipients'} as $value_5) {
                $values_5[] = $value_5;
            }
            $object->setSpecificSmsRecipients($values_5);
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getEmailRecipientUsers()) {
            $values = [];
            foreach ($object->getEmailRecipientUsers() as $value) {
                $values[] = $this->normalizer->normalize($value, 'json', $context);
            }
            $data->{'EmailRecipientUsers'} = $values;
        }
        if (null !== $object->getExcludedUsers()) {
            $values_1 = [];
            foreach ($object->getExcludedUsers() as $value_1) {
                $values_1[] = $this->normalizer->normalize($value_1, 'json', $context);
            }
            $data->{'ExcludedUsers'} = $values_1;
        }
        if (null !== $object->getIntegrationRecipients()) {
            $values_2 = [];
            foreach ($object->getIntegrationRecipients() as $value_2) {
                $values_2[] = $value_2;
            }
            $data->{'IntegrationRecipients'} = $values_2;
        }
        if (null !== $object->getSmsRecipientUsers()) {
            $values_3 = [];
            foreach ($object->getSmsRecipientUsers() as $value_3) {
                $values_3[] = $this->normalizer->normalize($value_3, 'json', $context);
            }
            $data->{'SmsRecipientUsers'} = $values_3;
        }
        if (null !== $object->getSpecificEmailRecipients()) {
            $values_4 = [];
            foreach ($object->getSpecificEmailRecipients() as $value_4) {
                $values_4[] = $value_4;
            }
            $data->{'SpecificEmailRecipients'} = $values_4;
        }
        if (null !== $object->getSpecificSmsRecipients()) {
            $values_5 = [];
            foreach ($object->getSpecificSmsRecipients() as $value_5) {
                $values_5[] = $value_5;
            }
            $data->{'SpecificSmsRecipients'} = $values_5;
        }

        return $data;
    }
}
