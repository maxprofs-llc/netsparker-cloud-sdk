<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class Custom404SettingModelNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Montross50\\NetsparkerCloud\\SDK\\Model\\Custom404SettingModel';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Montross50\NetsparkerCloud\SDK\Model\Custom404SettingModel;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Montross50\NetsparkerCloud\SDK\Model\Custom404SettingModel();
        if (property_exists($data, 'Custom404RegEx')) {
            $object->setCustom404RegEx($data->{'Custom404RegEx'});
        }
        if (property_exists($data, 'DisableAuto404Detection')) {
            $object->setDisableAuto404Detection($data->{'DisableAuto404Detection'});
        }
        if (property_exists($data, 'Max404PagesToTest')) {
            $object->setMax404PagesToTest($data->{'Max404PagesToTest'});
        }
        if (property_exists($data, 'Maximum404Signature')) {
            $object->setMaximum404Signature($data->{'Maximum404Signature'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getCustom404RegEx()) {
            $data->{'Custom404RegEx'} = $object->getCustom404RegEx();
        }
        if (null !== $object->getDisableAuto404Detection()) {
            $data->{'DisableAuto404Detection'} = $object->getDisableAuto404Detection();
        }
        if (null !== $object->getMax404PagesToTest()) {
            $data->{'Max404PagesToTest'} = $object->getMax404PagesToTest();
        }
        if (null !== $object->getMaximum404Signature()) {
            $data->{'Maximum404Signature'} = $object->getMaximum404Signature();
        }

        return $data;
    }
}
