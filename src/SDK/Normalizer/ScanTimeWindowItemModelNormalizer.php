<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class ScanTimeWindowItemModelNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Montross50\\NetsparkerCloud\\SDK\\Model\\ScanTimeWindowItemModel';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Montross50\NetsparkerCloud\SDK\Model\ScanTimeWindowItemModel;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Montross50\NetsparkerCloud\SDK\Model\ScanTimeWindowItemModel();
        if (property_exists($data, 'Day')) {
            $object->setDay($data->{'Day'});
        }
        if (property_exists($data, 'From')) {
            $object->setFrom($data->{'From'});
        }
        if (property_exists($data, 'ScanningAllowed')) {
            $object->setScanningAllowed($data->{'ScanningAllowed'});
        }
        if (property_exists($data, 'To')) {
            $object->setTo($data->{'To'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getDay()) {
            $data->{'Day'} = $object->getDay();
        }
        if (null !== $object->getFrom()) {
            $data->{'From'} = $object->getFrom();
        }
        if (null !== $object->getScanningAllowed()) {
            $data->{'ScanningAllowed'} = $object->getScanningAllowed();
        }
        if (null !== $object->getTo()) {
            $data->{'To'} = $object->getTo();
        }

        return $data;
    }
}
