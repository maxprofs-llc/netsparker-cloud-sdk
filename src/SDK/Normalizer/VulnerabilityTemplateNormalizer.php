<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Montross50\NetsparkerCloud\SDK\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class VulnerabilityTemplateNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Montross50\\NetsparkerCloud\\SDK\\Model\\VulnerabilityTemplate';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Montross50\NetsparkerCloud\SDK\Model\VulnerabilityTemplate;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Montross50\NetsparkerCloud\SDK\Model\VulnerabilityTemplate();
        if (property_exists($data, 'Actions')) {
            $object->setActions($data->{'Actions'});
        }
        if (property_exists($data, 'ExternalReferences')) {
            $object->setExternalReferences($data->{'ExternalReferences'});
        }
        if (property_exists($data, 'Impact')) {
            $object->setImpact($data->{'Impact'});
        }
        if (property_exists($data, 'ProofOfConcept')) {
            $object->setProofOfConcept($data->{'ProofOfConcept'});
        }
        if (property_exists($data, 'Remedy')) {
            $object->setRemedy($data->{'Remedy'});
        }
        if (property_exists($data, 'RemedyReferences')) {
            $object->setRemedyReferences($data->{'RemedyReferences'});
        }
        if (property_exists($data, 'Skills')) {
            $object->setSkills($data->{'Skills'});
        }
        if (property_exists($data, 'Summary')) {
            $object->setSummary($data->{'Summary'});
        }
        if (property_exists($data, 'Type')) {
            $object->setType($data->{'Type'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getActions()) {
            $data->{'Actions'} = $object->getActions();
        }
        if (null !== $object->getExternalReferences()) {
            $data->{'ExternalReferences'} = $object->getExternalReferences();
        }
        if (null !== $object->getImpact()) {
            $data->{'Impact'} = $object->getImpact();
        }
        if (null !== $object->getProofOfConcept()) {
            $data->{'ProofOfConcept'} = $object->getProofOfConcept();
        }
        if (null !== $object->getRemedy()) {
            $data->{'Remedy'} = $object->getRemedy();
        }
        if (null !== $object->getRemedyReferences()) {
            $data->{'RemedyReferences'} = $object->getRemedyReferences();
        }
        if (null !== $object->getSkills()) {
            $data->{'Skills'} = $object->getSkills();
        }
        if (null !== $object->getSummary()) {
            $data->{'Summary'} = $object->getSummary();
        }
        if (null !== $object->getType()) {
            $data->{'Type'} = $object->getType();
        }

        return $data;
    }
}
